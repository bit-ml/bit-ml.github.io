{"path":"blog/post/bgv-fully-homomorphic-encryption-scheme-in-python","templateID":2,"sharedPropsHashes":{"galleries":"ZHT1Kz"},"localProps":{"post":{"data":{"slug":"bgv-fully-homomorphic-encryption-scheme-in-python","authors":"Dacian Stroia","categories":"blog","featured_img":"/galleries/bgv_scheme2023/lock.jpg","date":"June-29-2023","title":"The BGV fully homomorphic encryption scheme","id":2},"messages":[],"history":["./content/collections/posts/bgv_scheme2023.md","content/collections/posts/bgv_scheme2023.html"],"cwd":"/Users/fbrad/bit/bit-ml","contents":"<h1>The BGV fully homomorphic encryption scheme</h1>\n<p>This is a sister blogpost to the <a href=\"https://bit-ml.github.io/blog/post/homomorphic-encryption-toy-implementation-in-python/\">previous one about a similar scheme (BFV)</a> and it's part of the series that covers fully homomorphic encryption techniques and applications.</p>\n<h2>Introduction</h2>\n<p><span><span><span>\\gdef\\can #1{\\|#1\\|^{\\text{can}}}</span><span aria-hidden=\"true\"></span></span></span></p>\n<p>In this blogpost we will focus on the encryption, decryption, relinearization and the noise analysis of the <a href=\"https://eprint.iacr.org/2011/277.pdf\">Brakerski, Gentry, Vaikuntanathan (BGV)</a> fully homomorphic encryption scheme. A Python implementation of the aforementioned will be provided.</p>\n<p>DISCLAIMER: This toy implementation is not meant to be secure or optimized\nfor efficiency. It's for educational purposes only, and for us to better understand the inner workings.</p>\n<p><strong>What to expect from this blogpost?</strong></p>\n<ol>\n<li>We briefly describe the motivations of fully homomorphic encryption.</li>\n<li>We present the BGV scheme.</li>\n<li>We offer a <a href=\"https://github.com/zademn/EverythingCrypto/blob/master/E3-Homomorphic-Encryption/BGV.ipynb\">Python implementation</a> for the BGV scheme, for educational purposes.</li>\n</ol>\n<p>Now, let's make a short, informal, tour before starting.\n<a href=\"https://en.wikipedia.org/wiki/Homomorphic_encryption\"><strong>Fully homomorphic encryption</strong></a> (FHE) allows us to perform computation on encrypted data. While there are a few cryptographic schemes to achieve this, in this blogpost we explore the <a href=\"https://eprint.iacr.org/2011/277.pdf\"><strong>BGV scheme</strong></a>.</p>\n<p>Firstly, this scheme allows us to encrypt messages into ciphertexts. Intuitively, a message is hidden in a ciphertext if there is no way to get to retrieve the original message from its encryption. To an attacker that sees a ciphertext, that ciphertext should look like \"random garbage\". In order to achieve this we hide the message by \"masking\" it with some noise. We say it's <em>hard</em> for an attacker to retrieve a message from its ciphertext if doing so is at least as hard as solving a computationally unfeasable problem. The problem the security of the BGV scheme is based on is called the <a href=\"https://en.wikipedia.org/wiki/Ring_learning_with_errors\"><strong>Ring Learning with Errors problem</strong></a>.</p>\n<p>Secondly, the scheme allows us to perform arithmetic operations (additions, multiplications) using noisy ciphertexts. However, we will encounter some problems along the way, such as the noise increasing after computations, or the size of the resulting ciphertext increasing. We'll see how to handle these using <strong>modulus switching</strong> (for the former) and <strong>relinearization</strong> (for the latter).</p>\n<p>This post will get a bit mathematical, so before starting we introduce some notation. Any other notation will be defined when introduced.</p>\n<p>Notations:</p>\n<ul>\n<li><span><span><span>m,m′,m∗m, m', m^*</span><span aria-hidden=\"true\"><span><span></span><span>m</span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> - messages.</li>\n<li><span><span><span>c,c′,c∗c, c', c^*</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> - ciphertexts. If ciphertexts have more components, we denote the components with indices: <span><span><span>c=(c0,c1)c = (c_0, c_1)</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></li>\n<li><span><span><span>λ\\lambda</span><span aria-hidden=\"true\"><span><span></span><span>λ</span></span></span></span></span> - Security parameter.</li>\n<li><span><span><span>Zq\\mathbb Z_q</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> - the set of integers from <span><span><span>(−q/2,q/2](-q / 2, q / 2]</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span></span></span></span></span></li>\n<li><span><span><span>RR</span><span aria-hidden=\"true\"><span><span></span><span>R</span></span></span></span></span> - Ring.\n<ul>\n<li>Ex: <span><span><span>Z\\mathbb Z</span><span aria-hidden=\"true\"><span><span></span><span>Z</span></span></span></span></span> - the integers.</li>\n<li>Ex: <span><span><span>Z[X]/(Xn+1)\\mathbb Z[X] / (X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span>Z</span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span> - the quotient polynomial ring with integer coefficients: .</li>\n</ul>\n</li>\n<li><span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> - Ring modulo the ideal generated by <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>.\n<ul>\n<li>Ex:  <span><span><span>Zq\\mathbb Z_q</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> - the integers mod <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>.</li>\n<li>Ex: <span><span><span>Zq[X]/(Xn+1)\\mathbb Z_q[X]/ (X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span> - the quotient polynomial ring with coefficients being integers in <span><span><span>(−q/2,q/2](-q / 2, q / 2]</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span></span></span></span></span>.</li>\n</ul>\n</li>\n<li><span><span><span>[a]q[a]_q</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>a</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> - <span><span><span>a mod qa \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span>, coefficients centered in <span><span><span>(−q/2,q/2](-q / 2, q / 2]</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span></span></span></span></span>. When applying <span><span><span>[⋅]q[\\cdot ]_q</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>⋅</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> to a polynomial we mean to apply it to all its coefficients individually. When applying <span><span><span>[⋅][\\cdot]</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>⋅</span><span>]</span></span></span></span></span> to a vector of elements, we mean to apply it to each element individually. So <span><span><span>[(a,b)]q=([a]q,[b]q)[(a, b)]_q = ([a]_q, [b]_q)</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>(</span><span>a</span><span>,</span><span></span><span>b</span><span>)</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span>[</span><span>a</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>[</span><span>b</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>. We give the similar treatment to reduction <span><span><span> mod q\\bmod q</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>q</span></span></span></span></span> operation</li>\n<li><span><span><span>χ=χ(λ)\\chi = \\chi(\\lambda)</span><span aria-hidden=\"true\"><span><span></span><span>χ</span><span></span><span>=</span><span></span></span><span><span></span><span>χ</span><span>(</span><span>λ</span><span>)</span></span></span></span></span> - Noise distribution, parametrized by <span><span><span>λ\\lambda</span><span aria-hidden=\"true\"><span><span></span><span>λ</span></span></span></span></span> (usually Gaussian).</li>\n<li>For simplicity, when we say we sample a polynomial from some distribution (or a polynomial comes from some distribution) we mean that its coefficients are sampled independently from that distribution.</li>\n<li><span><span><span>e←χe \\leftarrow \\chi</span><span aria-hidden=\"true\"><span><span></span><span>e</span><span></span><span>←</span><span></span></span><span><span></span><span>χ</span></span></span></span></span> - An element <span><span><span>ee</span><span aria-hidden=\"true\"><span><span></span><span>e</span></span></span></span></span> sampled from the distribution <span><span><span>χ\\chi</span><span aria-hidden=\"true\"><span><span></span><span>χ</span></span></span></span></span></li>\n<li><span><span><span>a←RSa \\xleftarrow R S</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span>S</span></span></span></span></span> - An element sampled uniformly from a set <span><span><span>SS</span><span aria-hidden=\"true\"><span><span></span><span>S</span></span></span></span></span>\n<ul>\n<li>Ex: <span><span><span>a←RRqa \\xleftarrow R R_q</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> An element <span><span><span>aa</span><span aria-hidden=\"true\"><span><span></span><span>a</span></span></span></span></span> sampled uniformly from the ring <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n<li><span><span><span>a⋅ba \\cdot b</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>⋅</span><span></span></span><span><span></span><span>b</span></span></span></span></span>  denotes the multiplication of 2 elements from the ring <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span><span><span>tata</span><span aria-hidden=\"true\"><span><span></span><span>t</span><span>a</span></span></span></span></span>  denotes the multiplication of coefficients of <span><span><span>a∈Rqa \\in R_q</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>∈</span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> by some scalar <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span>.</li>\n</ul>\n<h2>Fully Homomorphic Encryption (FHE)</h2>\n<p>Before defining fully homomorphic encryption, let's look at some <strong>applications</strong> of it to get a better intuition:</p>\n<p><strong>1. Outsourcing storage and computations</strong></p>\n<ul>\n<li>A company wants to use a cloud provider to store data and do computational heavy lifting.</li>\n<li><em>Task</em>: The company wants to use the information (for example: to do machine learning, extract statistical properties) without locally retrieving it  (defeating the purpose of using the cloud company services). Furthermore, the company doesn't want the cloud provider to see the sensitive data.</li>\n<li><em>Solution</em>: Using homomorphic encryption, the company can encrypt and send the data to the cloud provider and then the cloud provider can process the information (as requested by the company) in the encrypted form, without learning anything about the data.</li>\n<li>Ex: finance, medical apps, consumer privacy in ads.</li>\n</ul>\n<p><strong>2. Private queries</strong></p>\n<ul>\n<li>A client wants to retrieve a query against a large database held by a provider.</li>\n<li><em>Task</em>: The client wants to retrieve a query <strong>without</strong> the database provider learning the query.</li>\n<li><em>Solution</em>: Using homomorphic encryption the client can encrypt the index of the record and then the database can use this encrypted index to fetch (the comparison operation can be done using FHE) and return the encrypted result to the client. Finally, the client can decrypt the record.</li>\n</ul>\n<p><strong>3. Private set intersection</strong></p>\n<ul>\n<li>A client and a server each has a set of elements. The client wants to know which elements from its set are in the server's set.</li>\n<li><em>Task</em>: The client wants to find out the intersection of its elements and the server's, without the server learning anything about the client's elements and vice versa.</li>\n<li><em>Solution (Very simplified)</em>: They translate the comparison operation into a subtraction (<span><span><span>x=y⇒x−y=0x = y \\Rightarrow x - y = 0</span><span aria-hidden=\"true\"><span><span></span><span>x</span><span></span><span>=</span><span></span></span><span><span></span><span>y</span><span></span><span>⇒</span><span></span></span><span><span></span><span>x</span><span></span><span>−</span><span></span></span><span><span></span><span>y</span><span></span><span>=</span><span></span></span><span><span></span><span>0</span></span></span></span></span>). The client encrypts its elements and sends them to the server. Then, the server evalutes these subtractions homomorphically. Because the result of the subtraction is an encrypted result, the server learns nothing. Then the server sends the comparison results back and the client decrypts the results. We have a longer, more in-depth blogpost about it <a href=\"https://bit-ml.github.io/blog/post/private-set-intersection-an-implementation-in-python/\">here</a>. Happy reading!</li>\n<li>Examples: Client: user contacts, Server: whatsapp contacts; Client: own passwords, Server: database with breached passwords.</li>\n</ul>\n<p><em>Intuition</em></p>\n<ul>\n<li>A user has an arithmetic function <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span> and some inputs <span><span><span>(m1,...mn)(m_1, ... m_n)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>.</li>\n<li>He wants to compute <span><span><span>m∗=f(m1,...mn)m^* = f(m_1, ... m_n)</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>f</span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> but instead of computing it directly, he wants to encrypt <span><span><span>(m1,...mn)→(c1,...cn)(m_1, ... m_n) \\to (c_1, ... c_n)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>→</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>c</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> and do the computation on the ciphertext, obtaining a result which eventually decrypts to <span><span><span>m∗=f(m1,...mn)m^* =f(m_1, ... m_n)</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>f</span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>.</li>\n<li>It's helpful to view the functions as tree of operations. For example (taken from the <a href=\"https://bit-ml.github.io/blog/post/homomorphic-encryption-toy-implementation-in-python/\">BFV blogpost</a>): <span><span><span>f(m1,m2,m3,m4)=(m1×m2+m3)×m4f(m_1,m_2,m_3,m_4)= (m_1 \\times m_2 + m_3) \\times m_4</span><span aria-hidden=\"true\"><span><span></span><span>f</span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>×</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>×</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p><img src=\"https://i.imgur.com/ub2OyXu.png\" alt=\"\"></p>\n<p><strong>Homomorphic Encryption -- Definition</strong><br>\nLet  <span><span><span>(KeyGen,Enc,Dec,Eval)(\\text{KeyGen}, \\text{Enc}, \\text{Dec}, \\text{Eval})</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>KeyGen</span></span><span>,</span><span></span><span><span>Enc</span></span><span>,</span><span></span><span><span>Dec</span></span><span>,</span><span></span><span><span>Eval</span></span><span>)</span></span></span></span></span> be a tuple of procedures.<br>\nLet <span><span><span>f∈Ff \\in \\mathcal F</span><span aria-hidden=\"true\"><span><span></span><span>f</span><span></span><span>∈</span><span></span></span><span><span></span><span>F</span></span></span></span></span> be a function in a family of functions. This function can also be written as a <em>circuit</em> from a family of circuits <span><span><span>C∈CC \\in \\mathcal C</span><span aria-hidden=\"true\"><span><span></span><span>C</span><span></span><span>∈</span><span></span></span><span><span></span><span>C</span></span></span></span></span>.</p>\n<ul>\n<li><span><span><span>(sk,pk)←KeyGen(1λ,1d)(sk, pk) \\gets \\text{KeyGen}(1^\\lambda, 1^d)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>s</span><span>k</span><span>,</span><span></span><span>p</span><span>k</span><span>)</span><span></span><span>←</span><span></span></span><span><span></span><span><span>KeyGen</span></span><span>(</span><span><span>1</span><span><span><span><span><span><span></span><span><span>λ</span></span></span></span></span></span></span></span><span>,</span><span></span><span><span>1</span><span><span><span><span><span><span></span><span><span>d</span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> - key generation, <span><span><span>λ\\lambda</span><span aria-hidden=\"true\"><span><span></span><span>λ</span></span></span></span></span> is a security parameter, <span><span><span>dd</span><span aria-hidden=\"true\"><span><span></span><span>d</span></span></span></span></span> is a functionality parameter (degree of the polynomial or depth of the circtuit).</li>\n<li><span><span><span>ci←Enc(pk,mi)c_i \\gets \\text{Enc}(pk, m_i)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>←</span><span></span></span><span><span></span><span><span>Enc</span></span><span>(</span><span>p</span><span>k</span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> - Encryption of a message <span><span><span>mim_i</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> --  known as <strong>fresh ciphertexts</strong>.</li>\n<li><span><span><span>c∗=Eval(pk,f,c1,...cn)c^* = \\text{Eval}(pk, f, c_1, ... c_n)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>Eval</span></span><span>(</span><span>p</span><span>k</span><span>,</span><span></span><span>f</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>c</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> - Evaluate the function <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span> on the ciphertexts  -- known as <strong>evaluated ciphertexts</strong>.</li>\n</ul>\n<p><strong>Correctness</strong><br>\nWe require the (FHE) scheme to correctly decrypt both fresh and evaluated ciphertexts:\n<span><span><span>Dec(sk,c∗)=m∗=f(m1,...,mn)\\text{Dec}(sk, c^*) = m^* = f(m_1, ..., m_n)</span><span aria-hidden=\"true\"><span><span></span><span><span>Dec</span></span><span>(</span><span>s</span><span>k</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>f</span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></p>\n<p><img src=\"/galleries/bgv_scheme2023/fhe_simple_tiny.png\" alt=\"\"></p>\n<p>In the image above, the user with the laptop is interested  evaluating a certain circuit on its data <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span>. Therefore it sends its data, encrypted, to the cloud so that the cloud computes the circuit. By correctness, the user indeed gets the circuit applied on its data <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span>.</p>\n<p><strong>Circuits?</strong><br>\nThe two important operations we care about are addition and multiplication, because with them we can construct any arithmetic operation! Homomorphic encryption schemes started out by encrypting bits, so the equivalent operations for additon and multiplication on bits, <code>xor</code> and <code>and</code> are used.</p>\n<div><span><span><span>⊕=+ mod 2⊗=× mod 2\\oplus = + \\bmod 2 \\\\\n\\otimes = \\times \\bmod 2 </span><span aria-hidden=\"true\"><span><span></span><span>⊕</span><span></span><span>=</span><span></span></span><span><span></span><span>+</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>2</span></span><span></span><span><span></span><span>⊗</span><span></span><span>=</span><span></span></span><span><span></span><span>×</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>2</span></span></span></span></span></div>\n<p>To convey the fact that a circuit supports both <code>xor</code> and <code>and</code> usually a <code>nand</code> gate is used, because <code>nand</code> gates are composed by 1 multiplication and 1 addition and they are logically complete (you can build any circuit with them).\n<span><span><span>nand(a,b)=a×b+1 mod 2\\text{nand}(a, b) = a \\times b + 1 \\bmod 2</span><span aria-hidden=\"true\"><span><span></span><span><span>nand</span></span><span>(</span><span>a</span><span>,</span><span></span><span>b</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>a</span><span></span><span>×</span><span></span></span><span><span></span><span>b</span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>2</span></span></span></span></span></p>\n<p>By extending to multiple bits, with the gates we discussed above you can represent any computation using boolean circuits.</p>\n<p>HE can be classified based on the type of functions <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span> that it supports:</p>\n<ul>\n<li><strong>Partially homomorphic encryption</strong><br>\nGiven <span><span><span>Enc(m1)\\text{Enc}(m_1)</span><span aria-hidden=\"true\"><span><span></span><span><span>Enc</span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>, and <span><span><span>Enc(m2)\\text{Enc}(m_2)</span><span aria-hidden=\"true\"><span><span></span><span><span>Enc</span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> you can do limited operations (either additions or multiplications)</li>\n<li><strong>Somewhat (leveled) homomorphic encryption</strong><br>\nGiven <span><span><span>Enc(m1),...,Enc(mn)\\text{Enc}(m_1), ..., \\text{Enc}(m_n)</span><span aria-hidden=\"true\"><span><span></span><span><span>Enc</span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>,</span><span></span><span><span>Enc</span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> you can compute <span><span><span>Enc(f(m1,...mn))\\text{Enc}(f(m_1, ... m_n))</span><span aria-hidden=\"true\"><span><span></span><span><span>Enc</span></span><span>(</span><span>f</span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>m</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>)</span></span></span></span></span> where <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span> is a polynomial of a limited degree.\nOne can do limited number of multiplications (Circuits of a maximum depth).</li>\n<li><strong>Fully homomorphic encryption</strong><br>\nOne can do unlimited multiplications and additions.</li>\n</ul>\n<p>The community put a lot of effort into the analysing FHE schemes: finding good parameters, finding software and hardware optimizations, coming up with possible attacks and adjusting the schemes against them. An interesting read is the <a href=\"https://homomorphicencryption.org/standard/\">homomorphic encryption standard</a>, which compiles good practices and techniques for developing and using existing schemes.</p>\n<h2>Ring Learning With Errors (RLWE)</h2>\n<p>In this section we'll focus on briefly introducing the Ring learning with errors (RLWE) problem. The problem is very complex and we'll only attempt to cover the basic blocks for building an intuition. For the interested reader more details can be found in this <a href=\"https://eprint.iacr.org/2012/230.pdf\">paper</a>.</p>\n<h3>Quick recap on working with polynomials</h3>\n<p>This section is taken from the <a href=\"https://bit-ml.github.io/blog/post/homomorphic-encryption-toy-implementation-in-python/\">BFV blogpost</a>, but we'll repeat it here to save you a click. For this subsection we denote with <span><span><span>Z/qZ={0,...,q−1}\\mathbb Z / q\\mathbb Z = \\{0, ... , q - 1\\}</span><span aria-hidden=\"true\"><span><span></span><span>Z</span><span>/</span><span>q</span><span>Z</span><span></span><span>=</span><span></span></span><span><span></span><span>{</span><span>0</span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>,</span><span></span><span>q</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span>}</span></span></span></span></span>.</p>\n<p>The HE scheme we are going to describe deals with <em>adding and multiplying\npolynomials</em>. Here we present a quick example of how to work with\npolynomials, so that we all have the same starting point. If you already know\nhow to do this, you can skip it.</p>\n<p>First thing, let's add and multiply polynomials <em>modulo some polynomial <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span></em>.\nThis \"modulo <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span>\" thing simply means that we add and multiply the polynomials\nin the usual way, but we take the remainders of the results when divided by\n<span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span>. When we do these additions and multiplications <span><span><span> mod f\\bmod f</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>f</span></span></span></span></span>, we sometimes\nsay in a fancy way that we are working in the <em>ring</em> <span><span><span>Z[x]/(f)\\mathbb{Z}[x]/(f)</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span></span><span>[</span><span>x</span><span>]</span><span>/</span><span>(</span><span>f</span><span>)</span></span></span></span></span> of\nreduced polynomials.</p>\n<p>Let's take <span><span><span>f=x4+1f = x^4 +1</span><span aria-hidden=\"true\"><span><span></span><span>f</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span></span></span></span></span>. If we look at <span><span><span>p(x)=x5p(x) =x^5</span><span aria-hidden=\"true\"><span><span></span><span>p</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>5</span></span></span></span></span></span></span></span></span></span></span></span>,\nthen <span><span><span>p(x)=x⋅(x4+1)−xp(x) = x \\cdot (x^4 + 1) - x</span><span aria-hidden=\"true\"><span><span></span><span>p</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>x</span><span></span><span>⋅</span><span></span></span><span><span></span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span><span></span><span>−</span><span></span></span><span><span></span><span>x</span></span></span></span></span>. Therefore, when taking the reminder we get\n<span><span><span>p(x)=−x mod fp(x) = -x \\bmod f</span><span aria-hidden=\"true\"><span><span></span><span>p</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>−</span><span>x</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>f</span></span></span></span></span>. For faster computations <span><span><span> mod f\\bmod f</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>f</span></span></span></span></span> you can use this trick:\nwhen making <span><span><span> mod f\\bmod f</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>f</span></span></span></span></span>, simply replace <span><span><span>x4x^4</span><span aria-hidden=\"true\"><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span></span></span></span></span> by <span><span><span>−1-1</span><span aria-hidden=\"true\"><span><span></span><span>−</span><span>1</span></span></span></span></span>, <span><span><span>x5x^5</span><span aria-hidden=\"true\"><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>5</span></span></span></span></span></span></span></span></span></span></span></span> by <span><span><span>−x-x</span><span aria-hidden=\"true\"><span><span></span><span>−</span><span>x</span></span></span></span></span> and so on.</p>\n<p>Let's consider two polynomials <span><span><span>a(x)=x3+x2+7a(x) = x^3 + x^2 + 7</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>7</span></span></span></span></span> and <span><span><span>b(x)=x2+11xb(x) = x^2 + 11x</span><span aria-hidden=\"true\"><span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>1</span><span>x</span></span></span></span></span>.\nThen:</p>\n<div><span><span><span>a(x)+b(x) mod f=x3+2x2+11x+7 mod f.a(x)+b(x) \\bmod f = x^3 + 2x^2 + 11x + 7 \\text { mod }f.</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>+</span><span></span></span><span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>f</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>1</span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>7</span><span><span> mod </span></span><span>f</span><span>.</span></span></span></span></span></div>\n<p>Here nothing special happened. Let's multiply them:</p>\n<div><span><span><span>a(x)⋅b(x) mod f=(x3+x2+7)⋅(x2+11x) mod f=x5+11x4+x4+11x3+7x2+77x mod f=−x−11−1+11x3+7x2+77x mod f=11x3+7x2+76x−12 mod f.\\begin{aligned}\na(x) \\cdot b(x) \\bmod f\n    &#x26;= (x^3 + x^2 + 7)\\cdot (x^2 +11x) \\text { mod }f \\\\\n    &#x26;= x^5 + 11x^4 + x^4 + 11x^3 + 7x^2 + 77x \\text { mod }f\\\\\n    &#x26;= -x - 11 - 1 + 11x^3 + 7x^2 + 77x \\text { mod }f \\\\\n    &#x26;= 11x^3 + 7x^2 + 76x - 12 \\text { mod }f.\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>⋅</span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>f</span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>1</span><span>1</span><span>x</span><span>)</span><span><span> mod </span></span><span>f</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>5</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>1</span><span>1</span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>1</span><span>1</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span>7</span><span>x</span><span><span> mod </span></span><span>f</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>−</span><span>x</span><span></span><span>−</span><span></span><span>1</span><span>1</span><span></span><span>−</span><span></span><span>1</span><span></span><span>+</span><span></span><span>1</span><span>1</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span>7</span><span>x</span><span><span> mod </span></span><span>f</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>1</span><span>1</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>7</span><span>6</span><span>x</span><span></span><span>−</span><span></span><span>1</span><span>2</span><span><span> mod </span></span><span>f</span><span>.</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Now let's go one step further and see how we perform these operations of\npolynomials not just modulo <span><span><span>ff</span><span aria-hidden=\"true\"><span><span></span><span>f</span></span></span></span></span>, <em>but also modulo some integer <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span></em>. As you\nmight expect, the coefficients of these polynomials are also reduced modulo\n<span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>, so they always take integer values from <span><span><span>00</span><span aria-hidden=\"true\"><span><span></span><span>0</span></span></span></span></span> to <span><span><span>q−1.q-1.</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span>.</span></span></span></span></span> This time, we say\nthat we are working the ring of reduced polynomials <span><span><span>Z/qZ[x]/(f)\\mathbb{Z} / q\\mathbb Z[x]/(f)</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span></span><span>/</span><span>q</span><span>Z</span><span>[</span><span>x</span><span>]</span><span>/</span><span>(</span><span>f</span><span>)</span></span></span></span></span>.</p>\n<p>Let's take the previous example, <span><span><span>f=x4+1f = x^4+1</span><span aria-hidden=\"true\"><span><span></span><span>f</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span></span></span></span></span>, <span><span><span>a(x)=x3+x2+7a(x)=x^3+x^2+7</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>7</span></span></span></span></span>,\n<span><span><span>b(x)=x2+11xb(x)=x^2+11x</span><span aria-hidden=\"true\"><span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>1</span><span>x</span></span></span></span></span> and consider <span><span><span>q=5q =5</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span></span><span>=</span><span></span></span><span><span></span><span>5</span></span></span></span></span>. We can think of <span><span><span>aa</span><span aria-hidden=\"true\"><span><span></span><span>a</span></span></span></span></span> and <span><span><span>bb</span><span aria-hidden=\"true\"><span><span></span><span>b</span></span></span></span></span> as already\ntaken <span><span><span> mod f\\bmod f</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>f</span></span></span></span></span>. If we take them further modulo <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>, then <span><span><span>[a(x)]q=x3+x2+2[a(x)]_q = x^3 +\nx^2 +2</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>a</span><span>(</span><span>x</span><span>)</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>2</span></span></span></span></span> and <span><span><span>[b(x)]q=x2+x[b(x)]_q = x^2+x</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>b</span><span>(</span><span>x</span><span>)</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>x</span></span></span></span></span>. Moreover,</p>\n<div><span><span><span>[a(x)+b(x)]q=x3+x2+2+x2+x=x3+2x2+x+2[a(x) + b(x)]_q = x^3 + x^2 +2+ x^2 + x = x^3 + 2x^2 + x+2</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>+</span><span></span></span><span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>2</span><span></span><span>+</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>x</span><span></span><span>=</span><span></span></span><span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>2</span></span></span></span></span></div>\n<p>and</p>\n<div><span><span><span>[a(x)⋅b(x)]q=(x3+x2+2)⋅(x2+x)=x5+x4+x4+x3+2x2+2x=−x−1−1+x3+2x2+2x=x3+2x2+x+3\\begin{aligned}\n[a(x) \\cdot b(x)]_q\n    &#x26;= (x^3 + x^2+2) \\cdot (x^2 + x)\\\\\n    &#x26;= x^5 + x^4 + x^4 +x^3+2x^2 + 2x\\\\\n    &#x26;= -x -1 -1 + x^3 +2x^2+2x\\\\\n    &#x26;= x^3+2x^2+x+3\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>[</span><span>a</span><span>(</span><span>x</span><span>)</span><span></span><span>⋅</span><span></span><span>b</span><span>(</span><span>x</span><span>)</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>x</span><span>)</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>5</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span>x</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>−</span><span>x</span><span></span><span>−</span><span></span><span>1</span><span></span><span>−</span><span></span><span>1</span><span></span><span>+</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span>x</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>x</span><span></span><span>+</span><span></span><span>3</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>To give a powerful visual intuition of polynomials in quotient rings, consider the following polynomial<span><span><span>1+4x+2x3∈Z/5Z[x]/(x4+1)1 + 4x + 2x^3 \\in \\mathbb Z/5\\mathbb Z[x] / (x^4+1)</span><span aria-hidden=\"true\"><span><span></span><span>1</span><span></span><span>+</span><span></span></span><span><span></span><span>4</span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>2</span><span><span>x</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>∈</span><span></span></span><span><span></span><span>Z</span><span>/</span><span>5</span><span>Z</span><span>[</span><span>x</span><span>]</span><span>/</span><span>(</span><span><span>x</span><span><span><span><span><span><span></span><span><span>4</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span>\nand its visual representation. For this grade 3 polynomial we have four pentagons, for each coefficient. Each pentagon represents <span><span><span>Z/5Z\\mathbb Z/ 5\\mathbb Z</span><span aria-hidden=\"true\"><span><span></span><span>Z</span><span>/</span><span>5</span><span>Z</span></span></span></span></span>. The value of the coefficient is colored with green:</p>\n<p><img src=\"/galleries/bgv_scheme2023/poly_tiny.png\" alt=\"poly\"></p>\n<h3>The security of the BGV scheme</h3>\n<p>Like we said in the introduction, our ciphertexts will be masked with some noise to look as random as possible in order to hide any information an attacker may extract about the message.</p>\n<p>In fact it can be proven that the BGV scheme is secure as long as nobody can solve the Ring Learning With Errors (RLWE) problem described below. The parameters of the scheme must be chosen such that there are no known algorithms to solve the underlying RLWE problem in feasable time.</p>\n<p>Formally, the idea of \"ciphertexts looking like garbage\" is called <a href=\"https://en.wikipedia.org/wiki/Ciphertext_indistinguishability\"><strong>ciphertext indistinguishability</strong></a>. This concept can be formulated using a game between a challenger and an adversary:</p>\n<ul>\n<li>The challenger receives two messages <span><span><span>m0,m1m_0, m_1</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> from the adversary. Then, the challenger encrypts them into <span><span><span>c0,c1c_0, c_1</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>Then, the challenger secretly flips a bit <span><span><span>b∈{0,1}b\\in \\{0, 1\\}</span><span aria-hidden=\"true\"><span><span></span><span>b</span><span></span><span>∈</span><span></span></span><span><span></span><span>{</span><span>0</span><span>,</span><span></span><span>1</span><span>}</span></span></span></span></span> and sends the ciphertext <span><span><span>cbc_b</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>b</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> to the adversary.</li>\n<li>The adversary must guess the bit <span><span><span>bb</span><span aria-hidden=\"true\"><span><span></span><span>b</span></span></span></span></span>. After running an efficient algorithm, it outputs a bit <span><span><span>b′b'</span><span aria-hidden=\"true\"><span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span>. It wins if <span><span><span>b′=bb' = b</span><span aria-hidden=\"true\"><span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>b</span></span></span></span></span>.</li>\n</ul>\n<p><img src=\"/galleries/bgv_scheme2023/sec_game_tiny.png\" alt=\"sec_game\"></p>\n<p>If there exists <strong>at least one</strong> adversary that can win the game with a probability significantly larger than 1/2 (a coinflip) using a computationally efficient algorithm (something that can run in our universe's lifetime), the challenger's algorithm is considered insecure. When we prove the security of a scheme, we actually show that if an adversary had such an algorithm that can win the security game, he can take that algorithm and use it to solve a problem that is considered <a href=\"https://en.wikipedia.org/wiki/Computational_hardness_assumption\"><em>computationally hard</em></a>.</p>\n<p>We will now describe the RLWE problem.</p>\n<p>Consider the quotient polynomial ring <span><span><span>Rq=Zq[X]/(Xn+1)R_q = \\mathbb Z_q[X]/ (X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span>. This ring has polynomials with degree at most <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> and integer coefficients in <span><span><span>(−q/2,q/2](-q / 2, q / 2]</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span></span></span></span></span>.</p>\n<p><strong>The RLWE problem - decision</strong><br>\nThe problem asks to distinguish between the following two distributions:</p>\n<ul>\n<li><span><span><span>(ai,bi)(a_i, b_i)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> with <span><span><span>ai←RRqa_i \\xleftarrow R R_q</span><span aria-hidden=\"true\"><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, <span><span><span>bi←RRqb_i \\xleftarrow R R_q</span><span aria-hidden=\"true\"><span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li><span><span><span>(ai,bi)(a_i, b_i)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> with <span><span><span>ai←RRqa_i \\xleftarrow R R_q</span><span aria-hidden=\"true\"><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, <span><span><span>ei←χe_i \\leftarrow \\chi</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>←</span><span></span></span><span><span></span><span>χ</span></span></span></span></span>,  and <span><span><span>bi=ai⋅s+eib_i = a_i \\cdot s + e_i</span><span aria-hidden=\"true\"><span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> for some \"small\" secret <span><span><span>s∈Rqs \\in R_q</span><span aria-hidden=\"true\"><span><span></span><span>s</span><span></span><span>∈</span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> sampled before.</li>\n</ul>\n<p>The RLWE problem also has a search version, where given pairs <span><span><span>(ai,bi)(a_i, b_i)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>, <span><span><span>bi=ai⋅s+eib_i = a_i \\cdot s + e_i</span><span aria-hidden=\"true\"><span><span></span><span><span>b</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> you need to find <span><span><span>ss</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span>. In practice, the decision version is more widely used when proving the security of different schemes.</p>\n<p>More details about the RLWE problem can be found in this <a href=\"https://eprint.iacr.org/2012/230.pdf\">paper</a>. In essence, by adding some small noise <span><span><span>eie_i</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, from a Gaussian distribution, we make our secret <span><span><span>ss</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> unrecoverable even if we have access to many RLWE samples.</p>\n<p>The <a href=\"https://eprint.iacr.org/2011/277.pdf\">original BGV paper</a> presents the algorithms (encryption, decryption, etc) of a HE scheme based on a more general problem, the <em>General Learning with Errors (GLWE)</em>  problem. For simplicity, we work with the RLWE case in this blogpost.</p>\n<h2>The BGV encryption scheme</h2>\n<p>Generate the following parameters</p>\n<ul>\n<li><span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> - degree of <span><span><span>Xn+1X^n + 1</span><span aria-hidden=\"true\"><span><span></span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span></span></span></span></span>. <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> is chosen as a power of 2.</li>\n<li><span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span> - ciphertext modulus.</li>\n<li><span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> - plainext modulus, <span><span><span>t≪qt \\ll q</span><span aria-hidden=\"true\"><span><span></span><span>t</span><span></span><span>≪</span><span></span></span><span><span></span><span>q</span></span></span></span></span>.</li>\n<li><span><span><span>χ\\chi</span><span aria-hidden=\"true\"><span><span></span><span>χ</span></span></span></span></span> - the noise distribution, a discrete Gaussian.</li>\n</ul>\n<p>We consider <span><span><span>Rq=Zq[X]/(Xn+1)R_q = \\mathbb Z_q[X] / (X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span>. This ring has polynomials with degree at most <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> and integer coefficients in <span><span><span>(−q/2,q/2](-q / 2, q / 2]</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span></span></span></span></span>.</p>\n<p><strong>Note</strong>:</p>\n<ul>\n<li>All polynomial operations are considered <span><span><span> mod q\\bmod q</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>q</span></span></span></span></span> unless otherwise specified, to ease notation.</li>\n<li>When we talk about \"small\" polynomials, we intuitively think about them having  small coefficients.</li>\n<li>Polynomials that come from the noise distribution will be colored with green (ex: <span><span><span>e\\textcolor{darkgreen}{e}</span><span aria-hidden=\"true\"><span><span></span><span>e</span></span></span></span></span>) and the ones that will come from the secret key distribution will be colored with red (Ex: <span><span><span>s,u\\red{s}, \\red{u}</span><span aria-hidden=\"true\"><span><span></span><span>s</span><span>,</span><span></span><span>u</span></span></span></span></span>).</li>\n</ul>\n<p>We will have one secret key <span><span><span>sksk</span><span aria-hidden=\"true\"><span><span></span><span>s</span><span>k</span></span></span></span></span>, a public key with two components <span><span><span>pk=(pk0,pk1)pk = (pk_0, pk_1)</span><span aria-hidden=\"true\"><span><span></span><span>p</span><span>k</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>, a ciphertext with 2 components <span><span><span>c=(c0,c1)c = (c_0, c_1)</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>\nThe messsage will come from the ring <span><span><span>RtR_t</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p><code>SecretKeyGen(params) -> sk</code></p>\n<ul>\n<li>Draw <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> from a secret key distribution which outputs \"small\" elements with overwhelming probability. In practice <span><span><span>s∈{−1,0,1}n\\red{s} \\in \\{-1, 0, 1\\}^n</span><span aria-hidden=\"true\"><span><span></span><span>s</span><span></span><span>∈</span><span></span></span><span><span></span><span>{</span><span>−</span><span>1</span><span>,</span><span></span><span>0</span><span>,</span><span></span><span>1</span><span><span>}</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span></span></span></span></span>, with the probability of sampling <span><span><span>00</span><span aria-hidden=\"true\"><span><span></span><span>0</span></span></span></span></span> specified as a parameter and the probabilities of sampling <span><span><span>−1-1</span><span aria-hidden=\"true\"><span><span></span><span>−</span><span>1</span></span></span></span></span> or <span><span><span>11</span><span aria-hidden=\"true\"><span><span></span><span>1</span></span></span></span></span> being equal.</li>\n<li>Return the secret key <span><span><span>sk=ssk = \\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span><span>k</span><span></span><span>=</span><span></span></span><span><span></span><span>s</span></span></span></span></span>.</li>\n</ul>\n<p><code>PubKeyGen(sk, params) -> (pk0, pk1)</code></p>\n<ul>\n<li>Draw a random element <span><span><span>a←RRqa \\xleftarrow R R_q</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span><span><span><span><span><span></span><span><span>R</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and the noise <span><span><span>e←χ\\textcolor{darkgreen}{e} \\leftarrow \\chi</span><span aria-hidden=\"true\"><span><span></span><span>e</span><span></span><span>←</span><span></span></span><span><span></span><span>χ</span></span></span></span></span>.</li>\n<li>Return the public key: <span><span><span>pk=(pk0,pk1)=(a⋅s+te,−a)⏟RLWE instance-likepk = (pk_0, pk_1) = \\underbrace{(a \\cdot \\red{s} + t\\textcolor{darkgreen}{e}, -a)}_{\\text{RLWE instance-like}}</span><span aria-hidden=\"true\"><span><span></span><span>p</span><span>k</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>RLWE instance-like</span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span>,</span><span></span><span>−</span><span>a</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span>.</li>\n</ul>\n<p>Notice that the public key  looks like a RLWE sample, but the error <span><span><span>ee</span><span aria-hidden=\"true\"><span><span></span><span>e</span></span></span></span></span> is multiplied by the plaintext modulus <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span>.</p>\n<p><code>Encrypt(m, pk, params) -> (c0, c1)</code></p>\n<ul>\n<li>Draw the noise <span><span><span>e0,e1←χ\\textcolor{darkgreen}{e_0}, \\textcolor{darkgreen}{e_1} \\leftarrow \\chi</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>←</span><span></span></span><span><span></span><span>χ</span></span></span></span></span> and a \"small\" polynomial <span><span><span>u∈{−1,0,1}n\\red{u} \\in \\{-1, 0, 1\\}^n</span><span aria-hidden=\"true\"><span><span></span><span>u</span><span></span><span>∈</span><span></span></span><span><span></span><span>{</span><span>−</span><span>1</span><span>,</span><span></span><span>0</span><span>,</span><span></span><span>1</span><span><span>}</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span></span></span></span></span> in the same way as the secret.</li>\n<li>Compute <span><span><span>c0=pk0⋅u+te0+mc_0 = pk_0 \\cdot \\red{u} + t\\textcolor{darkgreen}{e_0} + m</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>u</span><span></span><span>+</span><span></span></span><span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>m</span></span></span></span></span></li>\n<li>Compute <span><span><span>c1=pk1⋅u+te1c_1 = pk_1 \\cdot \\red{u} + t\\textcolor{darkgreen}{e_1}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>u</span><span></span><span>+</span><span></span></span><span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li>Return <span><span><span>c=(c0,c1)c = (c_0, c_1)</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>.</li>\n</ul>\n<p>The ciphertext components <span><span><span>(c0,c1)(c_0, c_1)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> are elements in <span><span><span>Rq=Zq[X]/(Xn+1)R_q = \\mathbb Z_q[X]/(X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span>.</p>\n<p><code>Decrypt(c, sk, params)</code></p>\n<ul>\n<li>Compute <span><span><span>m=c0+c1⋅s mod q mod tm = c_0 + c_1 \\cdot \\red{s} \\bmod q \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span>m</span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span></li>\n<li>Return <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span>.</li>\n</ul>\n<p>Let's unroll the equations to check the correctness. All operation are <span><span><span> mod q\\bmod q</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>q</span></span></span></span></span> to ease notation, unless we specify otherwise.</p>\n<p>The public key is:</p>\n<div><span><span><span>pk0=a⋅s+tepk1=−a\\begin{aligned}\npk_0 &#x26;= a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e} \\\\\npk_1 &#x26;= -a\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>e</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>−</span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>The public key hides the secret <span><span><span>ss</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> as a RLWE sample.</p>\n<p>The encryption equations unrolled are:</p>\n<div><span><span><span>c0=pk0⋅u+te0+m=(a⋅s+te)⋅u+te0+m=a⋅s⋅u+t(e⋅u)+te0+mc1=pk1⋅u+te1=−a⋅u+te1\\begin{aligned}\nc_0 = pk_0 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e}_0 + m \\\\\n&#x26;= (a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e}) \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_0} + m \\\\\n&#x26;= a \\cdot \\textcolor{red}{s} \\cdot \\textcolor{red}{u} + t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u}) + t\\textcolor{darkgreen}{e_0} + m\n\\\\\nc_1 &#x26;= pk_1 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_1} \\\\\n&#x26;= -a \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_1} \\\\\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span>)</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span>)</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>−</span><span>a</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>The decryption equation unrolled is:</p>\n<div><span><span><span>c0+c1⋅s=a⋅s⋅u+t(e⋅u)+te0+m+(−a⋅u+te1)⋅s mod q=a⋅s⋅u+t(e⋅u)+te0+m−a⋅u⋅s+te1⋅s=te1⋅s+t(e⋅u)+te0+m=t(e⋅u+e0+e1⋅s)⏟error+m\\begin{aligned}\nc_0 + c_1 \\cdot \\textcolor{red}{s} &#x26;= a \\cdot \\textcolor{red}{s} \\cdot \\textcolor{red}{u} + t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u}) + t\\textcolor{darkgreen}{e_0} + m + (-a \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_1}) \\cdot \\textcolor{red}{s} \\bmod q \\\\\n&#x26;= \\cancel{a \\cdot \\textcolor{red}{s} \\cdot \\textcolor{red}{u}} + t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u}) + t\\textcolor{darkgreen}{e_0} + m \\cancel{-a \\cdot \\textcolor{red}{u} \\cdot \\textcolor{red}{s}} + t\\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s} \\\\\n&#x26;= t\\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s} + t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u}) + t\\textcolor{darkgreen}{e_0} + m \\\\\n&#x26;= \\underbrace{t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u} + \\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s})}_{\\text{error}} + m\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span>)</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span>(</span><span>−</span><span>a</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span></span><span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>⋅</span><span></span><span>u</span></span></span><span><span></span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span>)</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span><span><span><span><span><span><span></span><span><span>−</span><span>a</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span>)</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span></span><span><span><span><span>error</span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>The decryption is correct as long as the error we add to <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span> does not wrap the coefficients of <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span> arond the modulus <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>. The noise analysis will be offered later, in its own section.</p>\n<p>Now, we reduce the above <span><span><span> mod t\\bmod t</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span></span> and we get:</p>\n<div><span><span><span>c0+c1⋅s=m mod q mod tc_0+c_1 \\cdot \\textcolor{red}{s} = m \\bmod q \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span></div>\n<h2>FHE Operations</h2>\n<p>Here we will explore the homomorphic properties of the scheme. We refer to the two input message and ciphertext pairs with <span><span><span>(m,c),(m′,c′)(m, c), (m', c')</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>m</span><span>,</span><span></span><span>c</span><span>)</span><span>,</span><span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> and to the resulting message-ciphertext pair  with <span><span><span>(m∗,c∗)(m^*, c^*)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span>)</span></span></span></span></span>.</p>\n<p>The goal is to find two functions, <span><span><span>add,mul\\text{add}, \\text{mul}</span><span aria-hidden=\"true\"><span><span></span><span><span>add</span></span><span>,</span><span></span><span><span>mul</span></span></span></span></span></span>, that work on ciphertexts, for addition and multiplication, such that:</p>\n<ul>\n<li>when <span><span><span>m∗=m+m′m^* = m + m'</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> we have <span><span><span>c∗=add(c,c′)c^* = \\text{add}(c, c')</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>add</span></span><span>(</span><span>c</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> and <span><span><span>Dec(c∗)=m∗\\text{Dec}(c^*) = m^*</span><span aria-hidden=\"true\"><span><span></span><span><span>Dec</span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li>when <span><span><span>m∗=m⋅m′m^* = m \\cdot m'</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> we have <span><span><span>c∗=mul(c,c′)c^* = \\text{mul}(c, c')</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>mul</span></span><span>(</span><span>c</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> and <span><span><span>Dec(c∗)=m∗\\text{Dec}(c^*) = m^*</span><span aria-hidden=\"true\"><span><span></span><span><span>Dec</span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p>Recall that <span><span><span>cc</span><span aria-hidden=\"true\"><span><span></span><span>c</span></span></span></span></span> and <span><span><span>c′c'</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> encrypt <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span> and <span><span><span>m′m'</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> i.e.:</p>\n<div><span><span><span>c0=pk0⋅u+te0+mc1=pk1⋅u+te1c0′=pk0⋅u′+te0′+mc1′=pk1⋅u′+te1′\\begin{aligned}\nc_0 &#x26;= pk_0 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_0} + m \\\\\nc_1 &#x26;= pk_1 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_1} \\\\\n\\\\\nc'_0 &#x26;= pk_0 \\cdot \\textcolor{red}{u'} + t\\textcolor{darkgreen}{e'_0} + m \\\\\nc'_1 &#x26;= pk_1 \\cdot \\textcolor{red}{u'} + t\\textcolor{darkgreen}{e'_1} \\\\\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<h3>FHE Addition</h3>\n<p>The image on the left performs the addition before the encryption, with the messages in clear. This is not what we want. The image on the right is the desirable outcome, where we encrypt the messages, then perform addition on the encrypted messages.</p>\n<p><img src=\"/galleries/bgv_scheme2023/fhe_add_tiny.png\" alt=\"fhe_add\"></p>\n<p>We define <code>add</code>:\n<code>add(c, c') -> c*</code></p>\n<ul>\n<li><span><span><span>c0∗=c0+c0′c^*_0 = c_0 + c'_0</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span><span><span>c1∗=c1+c1′c^*_1 = c_1 + c'_1</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li>return <span><span><span>c∗=(c0∗,c1∗)c^* = (c^*_0, c^*_1)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></li>\n</ul>\n<div><span><span><span>c0∗=c0+c0′=pk0⋅u+te0+m+pk0⋅u′+te0′+m′=pk0⋅(u+u′)+t(e0+e0′)+m+m′=(a⋅s+te)⋅(u+u′)+t(e0+e0′)+m+m′=(a⋅s)⋅(u+u′)+te⋅(u+u′)+t(e0+e0′)+m+m′c1∗=c1+c1′=pk1⋅u+te1+pk1⋅u′+te1′=pk1(u+u′)+t(e1+e1′)=−a(u+u′)+t(e1+e1′)\\begin{aligned}\nc^*_0 &#x26;= c_0 + c'_0 \\\\\n&#x26;= pk_0 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_0} + m + pk_0 \\cdot \\textcolor{red}{u'} + t\\textcolor{darkgreen}{e'_0} + m' \\\\\n&#x26;= pk_0 \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + m + m' \\\\\n&#x26;= (a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e}) \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + m + m' \\\\\n&#x26;= (a \\cdot \\textcolor{red}{s} ) \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t\\textcolor{darkgreen}{e} \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + m + m'\n\\\\\n\\\\\nc^*_1 &#x26;= c_1 + c'_1 \\\\\n&#x26;= pk_1 \\cdot \\textcolor{red}{u} + t\\textcolor{darkgreen}{e_1} + pk_1 \\cdot \\textcolor{red}{u'} + t\\textcolor{darkgreen}{e'_1} \\\\ \n&#x26;= pk_1(\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1}) \\\\\n&#x26;= -a(\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1})\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>−</span><span>a</span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>And by using <code>Decrypt(c*, sk, params)</code> we have</p>\n<div><span><span><span>c0∗+c1∗⋅s=(a⋅s)⋅(u+u′)+te⋅(u+u′)+t(e0+e0′)+m+m′⏞c0∗++(−a(u+u′)+t(e1+e1′))⏞c1∗⋅s=(a⋅s)⋅(u+u′)+te⋅(u+u′)+t(e0+e0′)+m+m′−−(a⋅s)⋅(u+u′)+t(e1+e1′)⋅s=te⋅(u+u′)+t(e0+e0′)+t(e1+e1′)⋅s+m+m′=t(e⋅(u+u′)+e0+e0′+(e1+e1′)⋅s)⏟error+m+m′\\begin{aligned}\nc^*_0 + c^*_1 \\cdot \\textcolor{red}{s} &#x26;= \\overbrace{(a \\cdot \\textcolor{red}{s} ) \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + \\textcolor{darkgreen}{te} \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + m + m'}^{c^*_0} + \\\\\n&#x26;+ \\overbrace{(-a(\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1}))}^{c^*_1} \\cdot \\textcolor{red}{s} \\\\\n&#x26;= \\cancel{(a \\cdot \\textcolor{red}{s} ) \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'})} + t\\textcolor{darkgreen}{e} \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + m + m' - \\\\\n&#x26; \\cancel{-(a \\cdot \\textcolor{red}{s}) \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'})} +  t(\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1}) \\cdot \\textcolor{red}{s} \\\\\n&#x26;= t\\textcolor{darkgreen}{e} \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + t(\\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0}) + t(\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1}) \\cdot \\textcolor{red}{s}  + m + m' \\\\\n&#x26;=  \\underbrace{t(\\textcolor{darkgreen}{e} \\cdot (\\textcolor{red}{u} + \\textcolor{red}{u'}) + \\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e'_0} + (\\textcolor{darkgreen}{e_1} + \\textcolor{darkgreen}{e'_1}) \\cdot \\textcolor{red}{s} )}_{\\text{error}} + m + m'\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span></span><span><span><span><span><span><span></span><span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span>+</span></span></span><span><span></span><span><span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span><span><span><span></span><span><span>(</span><span>−</span><span>a</span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>)</span></span></span><span><span></span><span><span></span><span></span><span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span></span><span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span>e</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>−</span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>−</span><span>(</span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>t</span><span>e</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span>t</span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span></span><span><span><span><span>error</span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>(</span><span>u</span><span></span><span>+</span><span></span><span><span>u</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>(</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Again, by reducing everything <span><span><span> mod t\\bmod t</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span></span> we have</p>\n<div><span><span><span>c0∗+c1∗⋅s=m∗=m+m′ mod tc^*_0 + c^*_1 \\cdot \\red{s} = m^* = m + m' \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span></div>\n<p>with the same remark that for the decryption to be correct the error that we add to <span><span><span>m∗m^*</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> must not wrap <span><span><span>m∗m^*</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> around <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>.</p>\n<p>The resulting ciphertext <span><span><span>c∗c^*</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> is not fresh anymore (just encrypted), and has a bigger noise than any of the previous ciphertexts that were inputs in the addition operation. In general, using non-fresh ciphertexts <span><span><span>c∗c^*</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> to perform future operations will carry over the noise from all the previous operations.</p>\n<p>We'll analyse how the noise grows in a dedicated section at the end.</p>\n<h3>FHE Multiplication</h3>\n<p>As in the addition case, we want the multiplication to be done on the encrypted messages.</p>\n<p><img src=\"/galleries/bgv_scheme2023/fhe_mul_tiny.png\" alt=\"fhe_mul\"></p>\n<p>Before describing how we multiply two ciphertexts we need to reinterpret the decryption equation:\n<span><span><span>c0+c1⋅s≡m mod tc_0 + c_1 \\cdot \\red{s}  \\equiv m \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>≡</span><span></span></span><span><span></span><span>m</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span>\nas a linear equation:\n<span><span><span>y=ax+by = ax + b</span><span aria-hidden=\"true\"><span><span></span><span>y</span><span></span><span>=</span><span></span></span><span><span></span><span>a</span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>b</span></span></span></span></span>\nin <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span>.</p>\n<p>If we look at adding two such linear equations in <span><span><span>ss</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> we obtain another linear  equation in <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span>:\n<span><span><span>c0+c1⋅s+c0′+c1′⋅s=(c0+c0′)⏟c0∗+(c1+c1′)⏟c1∗⋅sc_0 + c_1 \\cdot \\red{s} + c'_0  + c'_1 \\cdot \\red{s} = \\underbrace{(c_0 + c_0')}_{c^*_0}  + \\underbrace{(c_1 + c'_1)}_{c^*_1} \\cdot \\red{s}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span></span></span></span></span></p>\n<p>However, when multiplying two linear equations in <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> we get a quadratic equation (<span><span><span>ax2+bx+cax^2 + bx + c</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span><span>x</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>b</span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>c</span></span></span></span></span>) in <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span>:</p>\n<div><span><span><span>(c0+c1⋅s)⏟=m mod t⋅(c0′+c1′⋅s)⏟=m′ mod t=c1⋅c1′⋅s2+(c0⋅c1′+c1⋅c0′)⋅s+c0⋅c0′\\begin{aligned}\n\\underbrace{(c_0 + c_1 \\cdot \\textcolor{red}{s} )}_{= m \\bmod t} \\cdot \\underbrace{(c'_0 + c'_1 \\cdot \\textcolor{red}{s} )}_{= m' \\bmod t} &#x26;= c_1 \\cdot c'_1 \\cdot \\textcolor{red}{s}^2 + (c_0 \\cdot c'_1 + c_1 \\cdot c'_0) \\cdot \\textcolor{red}{s} +c_0 \\cdot c'_0\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span><span><span><span><span></span><span><span><span>=</span><span>m</span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span><span><span><span></span><span><span><span>=</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>We can define <code>mul</code> in the following way:\n<code>mul(c, c') -> c*</code></p>\n<ul>\n<li><span><span><span>c0∗=c0⋅c0′c^*_0 = c_0 \\cdot c'_0</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span><span><span>c1∗=c0⋅c1′+c1⋅c0′c^*_1 = c_0 \\cdot c'_1 + c_1 \\cdot c'_0</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li><span><span><span>c2∗=c1⋅c1′c^*_2 = c_1 \\cdot c'_1</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></li>\n<li>return <span><span><span>c∗=(c0∗,c1∗,c2∗)c^* = (c^*_0, c^*_1, c^*_2)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></li>\n</ul>\n<p><strong>Remarks</strong></p>\n<ul>\n<li>Similarly, as in addition, the noise of the resulting ciphertext <span><span><span>c∗c^*</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span></span></span></span></span> increases.</li>\n<li>We increase the number of ciphertext components by 1. This is not sustainable.</li>\n<li>Our decryption equation is linear, however after <code>mul</code> we have a quadratic decryption equation with 3 ciphertexts that doesn't play well with our idea of linear decryption equation.</li>\n</ul>\n<p>To solve the remarks the concept of <strong>relinearization</strong> is introduced.</p>\n<h2>Relinearization</h2>\n<p>The concept was explained in the <a href=\"https://bit-ml.github.io/blog/post/homomorphic-encryption-toy-implementation-in-python/\">BFV blogpost</a> as well.</p>\n<p><em>Intuition</em>: We want to transform the quadratic equation <span><span><span>c0∗+c1∗⋅s+c2∗⋅s2c^*_0 + c^*_1 \\cdot \\red{s} + c^*_2 \\cdot \\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span> in <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> into some other linear equation <span><span><span>c^0+c^1⋅s^\\hat c_0 + \\hat c_1 \\cdot \\red{\\hat s}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span>s</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span></span></span></span></span> in some other secret key <span><span><span>s^\\red{\\hat s}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span></span><span>s</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>In order to do this we need to give some extra information (a \"hint\") about the key <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> that will help us get <span><span><span>s^\\red{\\hat s}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span></span><span>s</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Consider the hint to be the pair:</p>\n<div><span><span><span>(ek0,ek1)=((a⋅s+te)+s2,−a)(ek_0, ek_1) = ((a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e}) + \\textcolor{red}{s}^2, -a)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span>(</span><span>a</span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span>t</span><span>e</span><span>)</span><span></span><span>+</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>,</span><span></span><span>−</span><span>a</span><span>)</span></span></span></span></span></div>\n<p>This is very similar to how the public key is generated and we can use the <code>PubKeyGen -> (pk0, pk1)</code> to generate it:\n<span><span><span>(pk0+s2,pk1)(pk_0 + \\red{s}^2, pk_1)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>,</span><span></span><span>p</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>\nIntuitively, we use a RLWE sample to hide <span><span><span>s2\\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Notice that:</p>\n<div><span><span><span>ek0+ek1⋅s=a⋅s+e+s2−a⋅s=s2+eek_0 + ek_1 \\cdot \\textcolor{red}{s} = \\cancel{\\textcolor{red}{a} \\cdot \\textcolor{red}{s}} + \\textcolor{darkgreen}{e} + \\textcolor{red}{s}^2 - \\cancel{\\textcolor{red}{a} \\cdot \\textcolor{red}{s}} = \\textcolor{red}{s}^2 + \\textcolor{darkgreen}{e}</span><span aria-hidden=\"true\"><span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span>a</span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>e</span><span></span><span>+</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>−</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span>a</span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>e</span></span></span></span></span></div>\n<p>The easiest way to get the term <span><span><span>c2∗s2c^*_2 \\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span> from the above equation is to multiply it by <span><span><span>c2∗c^*_2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>. However, <span><span><span>c2∗c^*_2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> is a random element in <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and it will yield some large noise <span><span><span>c2∗ec^*_2\\textcolor{darkgreen}{e}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>e</span></span></span></span></span>. So we have to do something smarter.</p>\n<h3>Key switching v1</h3>\n<p>Key switching is a variant of relinearization. We start with a ciphertext <span><span><span>cc</span><span aria-hidden=\"true\"><span><span></span><span>c</span></span></span></span></span>.</p>\n<p><strong>Idea</strong>:<br>\nSplit the ciphertext into multiple \"small\" ciphertexts (for now think of small as the ciphertext polynomials having small coefficents). We can do this by decomposing the ciphertext coefficients into a small base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span>.</p>\n<p><em>Intuition</em>:<br>\nTo build an intuition, we can take the most common bases used in representing numbers:</p>\n<ul>\n<li>Base 10: <span><span><span>12310=3⋅100+2⋅101+1⋅102123_{10} = 3 \\cdot 10^0 + 2 \\cdot 10 ^1 + 1 \\cdot 10^2</span><span aria-hidden=\"true\"><span><span></span><span>1</span><span>2</span><span><span>3</span><span><span><span><span><span><span></span><span><span><span>1</span><span>0</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>3</span><span></span><span>⋅</span><span></span></span><span><span></span><span>1</span><span><span>0</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>2</span><span></span><span>⋅</span><span></span></span><span><span></span><span>1</span><span><span>0</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span></span><span>⋅</span><span></span></span><span><span></span><span>1</span><span><span>0</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li>Base 2: <span><span><span>1210=11002=1⋅23+1⋅22+0⋅21+0⋅2012_{10} = 1100_2 = 1 \\cdot 2^3 + 1 \\cdot 2^2 + 0 \\cdot 2^1 + 0 \\cdot 2^0</span><span aria-hidden=\"true\"><span><span></span><span>1</span><span><span>2</span><span><span><span><span><span><span></span><span><span><span>1</span><span>0</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>1</span><span>1</span><span>0</span><span><span>0</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>1</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>2</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>2</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>0</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>2</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>0</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>2</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p>Programmatically, this can be done by dividing the integer by the base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> <em>repeatedly</em> and collecting the remainders.</p>\n<p>In Python code:</p>\n<div><pre><code><span>def</span><span> </span><span>int2base</span><span>(</span>x<span>:</span><span> </span><span>int</span><span>,</span><span> </span>base<span>:</span><span> </span><span>int</span><span>)</span><span> </span><span>-</span><span>></span><span> </span>List<span>[</span><span>int</span><span>]</span><span>:</span><span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span>digits<span> </span><span>=</span><span> </span><span>[</span><span>]</span><span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span>while</span><span> </span>x<span> </span><span>></span><span> </span><span>0</span><span>:</span><span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>q<span>,</span><span> </span>r<span> </span><span>=</span><span> </span><span>divmod</span><span>(</span>x<span>,</span><span> </span>base<span>)</span><span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>digits<span>.</span>append<span>(</span>r<span>)</span><span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span>x<span> </span><span>=</span><span> </span>q<span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span>return</span><span> </span>digits<span></span>\n<span></span><span> </span><span> </span><span> </span><span> </span><span></span>\n<span></span><span>print</span><span>(</span>int2base<span>(</span><span>123</span><span>,</span><span> </span><span>10</span><span>)</span><span>)</span><span></span>\n<span></span><span>#<span> </span>[3,<span> </span>2,<span> </span>1]</span><span></span>\n<span></span><span>print</span><span>(</span>int2base<span>(</span><span>12</span><span>,</span><span> </span><span>2</span><span>)</span><span>)</span><span></span>\n<span></span><span>#<span> </span>[0,<span> </span>0,<span> </span>1,<span> </span>1]</span>\n</code></pre></div>\n<p>A ciphertext component <span><span><span>c∈Rqc \\in R_q</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span></span><span>∈</span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> is a polynomial of degree less than <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span>, with coefficients in <span><span><span>{0,1,..,q−1}\\{0,1,..,q-1\\}</span><span aria-hidden=\"true\"><span><span></span><span>{</span><span>0</span><span>,</span><span></span><span>1</span><span>,</span><span></span><span>.</span><span>.</span><span>,</span><span></span><span>q</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span>}</span></span></span></span></span>, which we denote as follows:\n<span><span><span>c(x)=c[0]+c[1]x+...+c[n−1]xn−1c(x) = c[0] + c[1]x + ... + c[n-1]x^{n-1}</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>c</span><span>[</span><span>0</span><span>]</span><span></span><span>+</span><span></span></span><span><span></span><span>c</span><span>[</span><span>1</span><span>]</span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>.</span><span>.</span><span>.</span><span></span><span>+</span><span></span></span><span><span></span><span>c</span><span>[</span><span>n</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span>]</span><span><span>x</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>We want to write the coefficients <span><span><span>(c[0],...,c[n−1])(c[0], ..., c[n-1])</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>c</span><span>[</span><span>0</span><span>]</span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>,</span><span></span><span>c</span><span>[</span><span>n</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span>]</span><span>)</span></span></span></span></span> in base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span>. Since any coefficient is less than <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>, this decomposition has at most <span><span><span>⌊log⁡Tq⌋+1\\lfloor \\log_T q \\rfloor + 1</span><span aria-hidden=\"true\"><span><span></span><span>⌊</span><span><span>lo<span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span><span></span><span>+</span><span></span></span><span><span></span><span>1</span></span></span></span></span> terms. For example <span><span><span>c[0]=∑i=0⌊log⁡Tq⌋Tic[0](i)c[0] = \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} T^i c[0]^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span>[</span><span>0</span><span>]</span><span></span><span>=</span><span></span></span><span><span></span><span><span>∑</span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span></span></span></span></span><span>c</span><span>[</span><span>0</span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span> where <span><span><span>c[0](i)c[0]^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span>[</span><span>0</span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span> is the corresponding digit <span><span><span>&#x3C;T&#x3C; T</span><span aria-hidden=\"true\"><span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>T</span></span></span></span></span> in the decomposition. Using these digits we can construct the polynomials <span><span><span>c(i)c^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span>:</p>\n<div><span><span><span>c(i)(x)=c[0](i)+c[1](i)x+...+c[n−1](i)xn−1c^{(i)}(x) = c[0]^{(i)} + c[1]^{(i)}x + ... + c[n-1]^{(i)}x^{n-1}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span>(</span><span>x</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>c</span><span>[</span><span>0</span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>c</span><span>[</span><span>1</span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span>x</span><span></span><span>+</span><span></span></span><span><span></span><span>.</span><span>.</span><span>.</span><span></span><span>+</span><span></span></span><span><span></span><span>c</span><span>[</span><span>n</span><span></span><span>−</span><span></span></span><span><span></span><span>1</span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span><span>x</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Then using these polynomials we can decompose the original polynomial <span><span><span>cc</span><span aria-hidden=\"true\"><span><span></span><span>c</span></span></span></span></span>:</p>\n<div><span><span><span>c=∑i=0⌊log⁡Tq⌋Ti⋅c(i) mod qc = \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} T^i  \\cdot c^{(i)} \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span>c</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span></div>\n<p>The polynomials <span><span><span>c(i)c^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span> are elements of <span><span><span>RTR_T</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and for a reasonable small <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> they have small coefficients (<span><span><span>&#x3C;T&#x3C; T</span><span aria-hidden=\"true\"><span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>T</span></span></span></span></span>). For each one of them we generate the hints:</p>\n<div><span><span><span>(ek0(i),ek1(i))=(ai⋅s+tei+Tis2,−ai)(ek_0^{(i)}, ek_1^{(i)}) = (a_i \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e_i} + T^i\\textcolor{red}{s}^2, -a_i)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span></span></span></span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>,</span><span></span><span>−</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></div>\n<p>with <span><span><span>ai←RRqa_i \\xleftarrow{R} R_q</span><span aria-hidden=\"true\"><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span><span><span><span><span><span></span><span><span><span>R</span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and <span><span><span>ei←χ\\textcolor{darkgreen}{e_i} \\leftarrow \\chi</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>←</span><span></span></span><span><span></span><span>χ</span></span></span></span></span>.</p>\n<p>Now we go back to our ciphertext <span><span><span>c∗=(c0∗,c1∗,c2∗)c^* = (c_0^*, c_1^*, c_2^*)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span>, the result of <code>EvalMul</code>. We decompose <span><span><span>c2∗c^*_2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> in the base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> and we get:</p>\n<div><span><span><span>c2∗=∑i=0⌊log⁡Tq⌋Ti⋅c2∗(i) mod qc^*_2 = \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} T^i  \\cdot {c^*_2}^{(i)} \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span></div>\n<p>Then we construct the new ciphertext <span><span><span>c^\\hat c</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span></span></span></span></span> with the <strong>two</strong> components:</p>\n<div><span><span><span>c^0=c0∗+∑i=0⌊log⁡Tq⌋ek0(i)⋅c2∗(i)=c0∗+∑i=0⌊log⁡Tq⌋((ai⋅s+tei)+Tis2)⋅c2∗(i)c^1=c1∗+∑i=0⌊log⁡Tq⌋ek1(i)⋅c2∗(i)=c1∗+∑i=0⌊log⁡Tq⌋−ai⋅c2∗(i)\\begin{aligned}\n\\hat c_0 &#x26;= c^*_0 + \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} ek_0^{(i)} \\cdot {c^*_2}^{(i)} = c^*_0 + \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} ((a_i \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e_i}) + T^i\\textcolor{red}{s}^2 )\\cdot {c^*_2}^{(i)}\\\\\n\\hat c_1 &#x26;= c^*_1 + \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} ek_1^{(i)} \\cdot {c^*_2}^{(i)} = c^*_1 + \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} -a_i \\cdot {c^*_2}^{(i)} \n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span>(</span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span></span></span></span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>−</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Using the above relations, we obtain the following linear equation:</p>\n<div><span><span><span>c^0+c^1⋅s=c0∗+c1∗⋅s+c2∗⋅s2⏟m⋅m′+∑i=0⌊log⁡Tq⌋tei⋅c2∗(i)⏟relinearization error\\hat c_0 + \\hat c_1 \\cdot \\textcolor{red}{s} = \\underbrace{c^*_0 + c^*_1 \\cdot \\textcolor{red}{s} + c^*_2 \\cdot \\textcolor{red}{s}^2}_{m \\cdot m'} + \\underbrace{ \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} t\\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}}_{\\text{relinearization error}}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>m</span><span>⋅</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>relinearization error</span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></div>\n<p>(the terms containing <span><span><span>ai⋅sa_i \\cdot \\red{s}</span><span aria-hidden=\"true\"><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span></span></span></span></span> from <span><span><span>c^0\\hat c_0</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and <span><span><span>−ai⋅s-a_i \\cdot \\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>−</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span></span></span></span></span> from <span><span><span>c^1⋅s\\hat c_1 \\cdot \\red{s}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span></span></span></span></span>  cancel out, <span><span><span>c2∗c^*_2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> is reconstructed and we are left with an error term).</p>\n<p>Because the relinearization error is a multiple of <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span>, it goes away when we decrypt and reduce <span><span><span> mod t\\bmod t</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span></span> as long as the relinearization error does not wrap <span><span><span>m∗=m⋅m′m^* = m\\cdot m'</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> around <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>.</p>\n<p><strong>Remarks</strong></p>\n<ul>\n<li>We need to relinearize after a multiplication.</li>\n<li>A smaller <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> means we have a smaller noise, but more relinearization keys are needed.</li>\n<li><span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> is chosen based on what we want to optimize. We usually want to choose <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> to introduce a noise around the size of the noise in the ciphertexts. Once the noise grows we can use <span><span><span>T2T^2</span><span aria-hidden=\"true\"><span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span> or something else. We can also choose a big <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> at the start (which introduces lots of starting noise) and we don't need to change it later.</li>\n</ul>\n<h3>Modulus switching</h3>\n<p><strong>Task</strong>:\nYou want to reduce the noise that accumulates in the ciphertext, after performing homomorphic operations. The modulus switching technique allows us to decrease the noise, to ensure the decryption is still correct after performing homomorphic operations. More analysis is provided in a dedicated section below.</p>\n<p><strong>Idea</strong>: The technique uses two moduli <span><span><span>Q,qQ, q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>,</span><span></span><span>q</span></span></span></span></span> with <span><span><span>q&#x3C;Qq &#x3C; Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>Q</span></span></span></span></span> and <span><span><span>q∣Qq | Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>∣</span><span>Q</span></span></span></span></span>. This  involves changing the ring where the ciphertexts live, <span><span><span>RQR_Q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, with a ring <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, that is parametrized by the smaller modulus. When you perform this change, the coefficient ring  <span><span><span>ZQ\\mathbb Z_Q</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> is \"approximated\" by some ring <span><span><span>Zq\\mathbb Z_q</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, in the intuitive sense that the numbers become smaller (the numbers are scaled down by some factor). As we will see this means that the noise will be smaller in absolute value. Although, the noise will relatively  stay the same, since <span><span><span>q&#x3C;Qq &#x3C; Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>Q</span></span></span></span></span>, we mostly care about the magnitude of the noise, especially in multiplications.</p>\n<p>You can perform this repeatedly with many moduli <span><span><span>{q0,q1,...,qL}\\{q_0, q_1, ..., q_L\\}</span><span aria-hidden=\"true\"><span><span></span><span>{</span><span><span>q</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>q</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>,</span><span></span><span><span>q</span><span><span><span><span><span><span></span><span><span>L</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>}</span></span></span></span></span> with decreasing values to lower the noise after each multiplication.</p>\n<p>The easiest way to do this is to scale down the ciphertext's components by <span><span><span>q/Qq / Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>/</span><span>Q</span></span></span></span></span> and <strong>smartly round</strong> in a way to keep the decryption equation correct. To ensure this, we want the scaling to keep the following propriety: <span><span><span>c~i=ci mod t\\tilde c_i = c_i \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span> , where <span><span><span>c~i≈(q/Q)ci\\tilde c_i \\approx (q / Q) c_i</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≈</span><span></span></span><span><span></span><span>(</span><span>q</span><span>/</span><span>Q</span><span>)</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> where <span><span><span>i∈{0,1}i \\in \\{0, 1\\}</span><span aria-hidden=\"true\"><span><span></span><span>i</span><span></span><span>∈</span><span></span></span><span><span></span><span>{</span><span>0</span><span>,</span><span></span><span>1</span><span>}</span></span></span></span></span>.</p>\n<p>The two requirements that we want to have are</p>\n<ol>\n<li>The decryption should be correct (decryption mod <span><span><span>QQ</span><span aria-hidden=\"true\"><span><span></span><span>Q</span></span></span></span></span> should be the same as decryption mod <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>): <span><span><span>[c0+c1⋅s]Q=[c~0+c~1⋅s]q mod t[c_0 + c_1 \\cdot \\red{s}]_Q = [\\tilde c_0 + \\tilde c_1 \\cdot \\red{s}]_q \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>[</span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span>.</li>\n<li>The noise scales down.</li>\n</ol>\n<p><strong>Rounding</strong><br>\nIn order for the decryption to be correct we must adjust <span><span><span>cic_i</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> before scaling by  <span><span><span>q/Qq / Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>/</span><span>Q</span></span></span></span></span>. To do this we add a <strong>small correction term</strong> <span><span><span>δi\\delta_i</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> per component. We require <span><span><span>δi\\delta_i</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> to:</p>\n<ol>\n<li>Only influence the error, hence <span><span><span>δi≡0 mod t\\delta_i \\equiv 0 \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≡</span><span></span></span><span><span></span><span>0</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span> (it will disappear when decrypting)</li>\n<li>Make the ciphertext to be divisible by <span><span><span>Q/q Q / q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span>:\n<div><span><span><span>ci+δi≡0 mod Qq⇒δi≡−ci mod Qqc_i + \\delta_i \\equiv 0 \\bmod \\dfrac Q q  \\Rightarrow \\delta_i \\equiv -c_i \\bmod \\dfrac Q q</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≡</span><span></span></span><span><span></span><span>0</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>q</span></span><span><span></span><span></span></span><span><span></span><span>Q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>⇒</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≡</span><span></span></span><span><span></span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>q</span></span><span><span></span><span></span></span><span><span></span><span>Q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span></span></span></span></span></div>\n</li>\n</ol>\n<p>One easy choice to set the correction terms such that both properties hold is <span><span><span>δi=t[−cit−1]Q/q\\delta_i = t [-c_i t^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>t</span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> where <span><span><span>t−1t^{-1}</span><span aria-hidden=\"true\"><span><span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span> is the inverse of <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> modulo <span><span><span>Q/qQ / q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span>.</p>\n<p>In the end, we define the components <span><span><span>c~i\\tilde c_i</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> of the  modulus switched ciphertext:\n<span><span><span>c~i=qQ(ci+δi)\\tilde c_i = \\dfrac q Q(c_i + \\delta_i)</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span></p>\n<p>Now, let's check the decryption equation is actually correct. For a <span><span><span>k∈Rk \\in R</span><span aria-hidden=\"true\"><span><span></span><span>k</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span>:</p>\n<div><span><span><span>[c~0+c~1⋅s]q=c~0+c~1⋅s−kq=qQ(c0+δ0)+qQ(c1+δ1)⋅s−kq=qQ(c0+c1⋅s+δ0+δ1⋅s)−kq=qQ([c0+c1⋅s]Q+kQ+δ0+δ1⋅s)−kq=qQ[c0+c1⋅s]Q⏟≡m mod t+qQ(δ0+δ1⋅s)⏟≡0 mod t+kq−kq≡qQm mod t\\begin{aligned}\n[\\tilde c_0 + \\tilde c_1 \\cdot \\textcolor{red}{s}]_q \n&#x26;= \\tilde c_0 + \\tilde c_1 \\cdot \\textcolor{red}{s} - kq \\\\\n&#x26;= \\dfrac q Q(c_0 + \\delta_0) + \\dfrac q Q (c_1 + \\delta_1) \\cdot \\textcolor{red}{s} - kq \\\\\n&#x26;= \\dfrac q Q(c_0 + c_1 \\cdot \\textcolor{red}{s} + \\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s}) - kq \\\\\n&#x26;= \\dfrac q Q([{c_0 + c_1 \\cdot \\textcolor{red}{s}}]_Q + kQ + \\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s}) - kq \\\\ \n&#x26;= \\dfrac q Q \\underbrace{[{c_0 + c_1 \\cdot \\textcolor{red}{s}}]_Q}_{\\equiv m \\bmod t}  + \\underbrace{\\dfrac q Q (\\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s})}_{\\equiv 0 \\bmod t} + kq - kq \\\\\n&#x26;\\equiv \\dfrac q Q m \\bmod t\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>[</span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>−</span><span></span><span>k</span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>−</span><span></span><span>k</span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>−</span><span></span><span>k</span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>[</span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span><span><span>]</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>k</span><span>Q</span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>−</span><span></span><span>k</span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span><span><span><span><span></span><span><span><span>≡</span><span>m</span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>[</span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span><span><span>]</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span></span><span><span><span>≡</span><span>0</span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span><span>k</span><span>q</span><span></span><span>−</span><span></span><span>k</span><span>q</span></span></span><span><span></span><span><span></span><span></span><span>≡</span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>m</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>When doing <span><span><span>c0+c1⋅s=[c0+c1⋅s]Q+kQc_0 + c_1 \\cdot \\red{s} = [c_0 + c_1 \\cdot \\red{s}]_Q + kQ</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span>[</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>k</span><span>Q</span></span></span></span></span>\nwe mention that <span><span><span>kk</span><span aria-hidden=\"true\"><span><span></span><span>k</span></span></span></span></span> is the same as in <span><span><span>[c~0+c~1⋅s]q=c~0+c~1⋅s−kq[\\tilde c_0 + \\tilde c_1 \\cdot \\red{s}]_q = \\tilde c_0 + \\tilde c_1 \\cdot \\red{s} - kq</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>−</span><span></span></span><span><span></span><span>k</span><span>q</span></span></span></span></span> under some conditions (see lemma 1 from <a href=\"https://eprint.iacr.org/2011/277.pdf\">here</a>).</p>\n<p>In the end we decrypt <span><span><span>qQm\\dfrac q Q m</span><span aria-hidden=\"true\"><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>m</span></span></span></span></span> instead of <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span>. In practice this can be solved by multiplying by <span><span><span>Q/qQ/q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span> before encryption or after decryption, or to take <span><span><span>Q/q≡1 mod tQ/q \\equiv 1 \\bmod t</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span><span></span><span>≡</span><span></span></span><span><span></span><span>1</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>t</span></span></span></span></span> (however such a <span><span><span>Q/qQ/q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span> can be harder to find).</p>\n<h3>Key switching v2</h3>\n<p>Now that we know about modulus switching we introduce a second version to do key switching in BGV. Recall that the key switching technique is used in relinearization, for decreasing the size of the ciphertext obtained in multiplication.</p>\n<p><strong>Idea</strong>: Given two moduli <span><span><span>q,Qq, Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>,</span><span></span><span>Q</span></span></span></span></span>  with <span><span><span>q&#x3C;Qq &#x3C; Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>Q</span></span></span></span></span> and <span><span><span>q∣Qq | Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>∣</span><span>Q</span></span></span></span></span>, we start with elements in <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and we make a detour in a ring <span><span><span>RQR_Q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> with a bigger modulus <span><span><span>QQ</span><span aria-hidden=\"true\"><span><span></span><span>Q</span></span></span></span></span> where we perform our relinearization. Then we perform modulus switching to go back to our small ring <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>We generate the <em>hint</em>:</p>\n<div><span><span><span>(ek0,ek1)=((a⋅s+te+Qqs2),−a) mod Q(ek_0, ek_1) = ((a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e} + \\frac{Q}{q} \\textcolor{red}{s}^2), -a) \\bmod Q</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span>(</span><span>a</span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span>t</span><span>e</span><span></span><span>+</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>)</span><span>,</span><span></span><span>−</span><span>a</span><span>)</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>Q</span></span></span></span></span></div>\n<p>Recall that <span><span><span>c∗=(c0∗,c1∗,c2∗)c^* = (c^*_0, c^*_1, c^*_2)</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> is the result of the <code>mul</code>. Then we compute the components of the new ciphertext <span><span><span>c^\\hat c</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span></span></span></span></span>:</p>\n<div><span><span><span>c^0=Qqc0∗+c2∗⋅ek0 mod Qc^1=Qqc1∗+c2∗⋅ek1 mod Q\\begin{aligned}\n\\hat c_0 &#x26;= \\frac Q q c_0^* + c_2^* \\cdot ek_0 \\bmod Q\\\\\n\\hat c_1 &#x26;= \\frac Q q c_1^* + c_2^* \\cdot ek_1 \\bmod Q\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>q</span></span><span><span></span><span></span></span><span><span></span><span>Q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>Q</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span>q</span></span><span><span></span><span></span></span><span><span></span><span>Q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Lastly, we scale them both using modulus switching: <span><span><span>c^i=qQ(c^i+δi)\\hat c_i = \\dfrac q Q (\\hat c_i + \\delta_i)</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> with <span><span><span>δi=t[−cit−1]Q/q\\delta_i = t[-c_i t^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>t</span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, like before.</p>\n<p>The relinearization equation looks like this:</p>\n<div><span><span><span>c^0+c^1⋅s=c0∗+c1∗⋅s+c2∗⋅s2⏟m⋅m′+qQ(tc2∗⋅e+δ0+δ1⋅s)⏟relinearization error\\hat c_0 + \\hat c_1 \\cdot \\textcolor{red}{s} = \\underbrace{c_0^* + c_1^* \\cdot \\textcolor{red}{s} + c_2^* \\cdot \\textcolor{red}{s}^2}_{m\\cdot m'} + \\underbrace{\\dfrac q Q (t c_2^* \\cdot \\textcolor{darkgreen}{e} + \\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s})}_{\\text{relinearization error}}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>m</span><span>⋅</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>relinearization error</span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>t</span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></div>\n<p>Because the relinearization error is a multiple of <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> (remember that we chose <span><span><span>δi\\delta_i</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> to be multiples of <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> too, to not influence the error), it will go away when we decrypt and reduce <span><span><span> mod t\\bmod t</span><span aria-hidden=\"true\"><span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span>t</span></span></span></span></span> as long as the relinearization error does not wrap <span><span><span>m∗=m⋅m′m^* = m\\cdot m'</span><span aria-hidden=\"true\"><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span>∗</span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>m</span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> around <span><span><span>qq</span><span aria-hidden=\"true\"><span><span></span><span>q</span></span></span></span></span>.</p>\n<div><span><span><span>c^0+c^1⋅s=qQ(Qqc0∗+c2∗⋅ek0+δ0)+(qQ(Qqc1∗+c2∗⋅ek1)+δ1)⋅s=qQ(Qqc0∗+c2∗⋅(a⋅s+te+Qqs2)+δ0)++(qQ(Qqc1∗+c2∗⋅(−a))+δ1)⋅s=c0∗+c1∗⋅s+c2∗⋅s2+qQ(tc2∗⋅e+δ0+δ1⋅s)=mm′ mod t\\begin{aligned}\n\\hat c_0 + \\hat c_1 \\cdot \\textcolor{red}{s} \n&#x26;= \\frac{q}{Q} \\left( \\frac{Q}{q} c_0^* + c_2^* \\cdot ek_0 + \\delta_0 \\right) + \\left(\\frac{q}{Q} \\left ( \\frac{Q}{q} c_1^*  + c_2^* \\cdot ek_1 \\right) + \\delta_1 \\right) \\cdot \\textcolor{red}{s} \\\\\n&#x26;= \\frac{q}{Q} \\left( \\frac{Q}{q} c_0^* + c_2^* \\cdot \\left( a \\cdot \\textcolor{red}{s} + t\\textcolor{darkgreen}{e} + \\frac{Q}{q} \\textcolor{red}{s}^2 \\right) + \\delta_0 \\right) + \\\\\n&#x26;+ \\left(\\frac{q}{Q} \\left ( \\frac{Q}{q} c_1^*  + c_2^* \\cdot (-a)\\right)  + \\delta_1 \\right) \\cdot \\textcolor{red}{s} \\\\\n&#x26;= c_0^* + c_1^* \\cdot \\textcolor{red}{s} + c_2^* \\cdot s^2 + \\frac{q}{Q} (tc_2^* \\cdot \\textcolor{darkgreen}{e} + \\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s}) \\\\\n&#x26;= mm' \\bmod t\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>^</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span><span>k</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span><span>(</span></span><span>a</span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span>t</span><span>e</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span></span></span><span><span></span><span><span></span><span></span><span>+</span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>(</span><span>−</span><span>a</span><span>)</span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>⋅</span><span></span><span>s</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>t</span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>e</span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>m</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<h2>Noise analysis</h2>\n<p>The main motivation of analysing the noise growth is because we want to set the parameters of the scheme based on it.</p>\n<p>Relevant papers:</p>\n<ul>\n<li><a href=\"https://www.esat.kuleuven.be/cosic/publications/thesis-316.pdf\">Ilia Iliashenko thesis</a></li>\n<li><a href=\"https://eprint.iacr.org/2015/889.pdf\">CS15</a></li>\n<li><a href=\"https://eprint.iacr.org/2019/493.pdf\">Evaluating the effectiveness of heuristic worst-case noise analysis in FHE</a></li>\n<li><a href=\"https://eprint.iacr.org/2012/099.pdf\">GHS</a></li>\n<li><a href=\"https://eprint.iacr.org/2022/706.pdf\">Finding and Evaluating Parameters for BGV</a></li>\n</ul>\n<h3>Measuring Noise</h3>\n<p>When doing operations (such as addition, multiplication) with noisy ciphertexts, the total noise accumulates. In the end we want our decryption to be correct. However, this can only happen if the accumulated noise does not exceed some <strong>bound</strong>.</p>\n<p><img src=\"/galleries/bgv_scheme2023/fhe_noise_tiny.png\" alt=\"fhe_noise\"></p>\n<p><em>Intuition</em>: We want to \"measure\" this accumulated noise by looking at \"how much\" a polynomial can impact an operation it's involved in. For example, we can analyze the impact of the polynomials <span><span><span>eie_i</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> which represent the RLWE noise or of the secret <span><span><span>ss</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span>. We can represent the polynomial's impact with a number.</p>\n<p>We can \"measure\" the impact of the polynomials using the:</p>\n<ol>\n<li><strong>Infinity norm</strong>: <span><span><span>∥a∥∞=max⁡∣ai∣\\|a\\|_\\infty = \\max{|a_i|}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span>∞</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>max</span><span></span><span><span>∣</span><span><span>a</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>∣</span></span></span></span></span></span>, which is the value of the biggest coefficient in absolute value.</li>\n<li><strong>Canonical norm</strong>: <span><span><span>∥a∥can\\can a</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span></span>. In order to define it we use the so called <strong>canonical embedding</strong> of the polynomial.</li>\n</ol>\n<p>While the infinity norm is easy to understand, the canonical embedding is a bit more mathematically involved. Instead of searching for a way to measure the impact of a polynomial <span><span><span>a∈Ra \\in R</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span>, we transfer the polynomial in another space, such as <span><span><span>Cn\\mathbb C^n</span><span aria-hidden=\"true\"><span><span></span><span><span>C</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span></span></span></span></span>, and we search for a better measure there.</p>\n<p>Recall that we work with polynomials from the ring <span><span><span>Rq=Zq[X]/(Xn+1)R_q = \\mathbb Z_q[X]/(X^n + 1)</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>[</span><span>X</span><span>]</span><span>/</span><span>(</span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span><span>)</span></span></span></span></span> with <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> a power of <span><span><span>22</span><span aria-hidden=\"true\"><span><span></span><span>2</span></span></span></span></span>.</p>\n<p><strong>Canonical embedding</strong><br>\nWe have the quotient polynomial <span><span><span>Xn+1X^n + 1</span><span aria-hidden=\"true\"><span><span></span><span><span>X</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>1</span></span></span></span></span> of <span><span><span>RR</span><span aria-hidden=\"true\"><span><span></span><span>R</span></span></span></span></span> which has the complex roots <span><span><span>{ζ0,…,ζn−1}\\{\\zeta_0, \\dots, \\zeta_{n-1}\\}</span><span aria-hidden=\"true\"><span><span></span><span>{</span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>…</span><span></span><span>,</span><span></span><span><span>ζ</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>}</span></span></span></span></span> with <span><span><span>ζin=−1⇒ζi2n=1\\zeta_i^n = -1 \\Rightarrow \\zeta_i^{2n} = 1</span><span aria-hidden=\"true\"><span><span></span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>i</span></span></span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>−</span><span>1</span><span></span><span>⇒</span><span></span></span><span><span></span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>i</span></span></span><span><span></span><span><span><span>2</span><span>n</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>1</span></span></span></span></span>.<br>\nThen we take a polynomial <span><span><span>a∈Ra \\in R</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span>:<br>\n<span><span><span>a(X)=a0+a1X+...an−1Xn−1a(X) = a_0 + a_1X + ... a_{n-1}X^{n-1}</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span>(</span><span>X</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>a</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>X</span><span></span><span>+</span><span></span></span><span><span></span><span>.</span><span>.</span><span>.</span><span><span>a</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>X</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span>\nand we evaluate <span><span><span>aa</span><span aria-hidden=\"true\"><span><span></span><span>a</span></span></span></span></span> in every root <span><span><span>ζi\\zeta_i</span><span aria-hidden=\"true\"><span><span></span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>. This leads to a vector <span><span><span>(a(ζ0),...a(ζn−1))∈Cn\\left(a(\\zeta_0), ... a(\\zeta_{n-1})\\right) \\in \\mathbb C^n</span><span aria-hidden=\"true\"><span><span></span><span><span>(</span><span>a</span><span>(</span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>a</span><span>(</span><span><span>ζ</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>)</span></span><span></span><span>∈</span><span></span></span><span><span></span><span><span>C</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span></span></span></span></span>. We call this vector the <strong>canonical embedding</strong> of <span><span><span>aa</span><span aria-hidden=\"true\"><span><span></span><span>a</span></span></span></span></span>.<br>\nThe <a href=\"https://eprint.iacr.org/2012/230.pdf\">canonical embedding</a> is defined as</p>\n<div><span><span><span>σ:R→Cn,σ(a)=(a(ζ0),...a(ζn−1))\\sigma: R \\to \\mathbb C^n,\n\\quad \\sigma(a) = \\left(a(\\zeta_0), ... a(\\zeta_{n-1})\\right)</span><span aria-hidden=\"true\"><span><span></span><span>σ</span><span></span><span>:</span><span></span></span><span><span></span><span>R</span><span></span><span>→</span><span></span></span><span><span></span><span><span>C</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span><span>,</span><span></span><span></span><span>σ</span><span>(</span><span>a</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span>(</span><span>a</span><span>(</span><span><span>ζ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span>a</span><span>(</span><span><span>ζ</span><span><span><span><span><span><span></span><span><span><span>n</span><span>−</span><span>1</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span><span>)</span></span></span></span></span></span></div>\n<p><strong>Canonical norm</strong><br>\nSince now we have obtained a new vector in <span><span><span>Cn\\mathbb C^n</span><span aria-hidden=\"true\"><span><span></span><span><span>C</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span></span></span></span></span></span></span></span></span> we can look at its infinity norm and define the <strong>canonical norm</strong> <span><span><span>∥a∥can=∥σ(a)∥∞\\can a = \\|\\sigma(a)\\|_\\infty</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>∥</span><span>σ</span><span>(</span><span>a</span><span>)</span><span><span>∥</span><span><span><span><span><span><span></span><span><span>∞</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>In practice, the canonical norm is used to compute the noise bounds, because it provides a better decryption noise bound.</p>\n<ol>\n<li>There is a relationship between these norms: <span><span><span>∥a∥∞≤c2n⋅∥a∥can\\|a\\|_{\\infty} \\leq c_{2n}\\cdot \\can a</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span>∞</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>2</span><span>n</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span></span> for some constant <span><span><span>c2nc_{2n}</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>2</span><span>n</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>, which is <span><span><span>11</span><span aria-hidden=\"true\"><span><span></span><span>1</span></span></span></span></span> when <span><span><span>nn</span><span aria-hidden=\"true\"><span><span></span><span>n</span></span></span></span></span> is a power of <span><span><span>22</span><span aria-hidden=\"true\"><span><span></span><span>2</span></span></span></span></span> (see <a href=\"https://eprint.iacr.org/2011/535.pdf\">this</a>). With this inequality in mind, it suffices to assure correct decryption by setting the canonical norm of the noise to be less than <span><span><span>q/2q/2</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>/</span><span>2</span></span></span></span></span>.</li>\n<li>When doing multiplications, the noise bound offered by the canonical norm increases slower than the bound offered by the infinity norm. We have these two inequalities:</li>\n</ol>\n<div><span><span><span>∥ab∥∞≤γ∥a∥∞∥b∥∞∥ab∥can≤∥a∥can∥b∥can\\begin{aligned}\n\\|ab\\|_\\infty &#x26;\\leq \\gamma\\|a\\|_\\infty \\|b\\|_\\infty  \\\\ \n\\can {ab} &#x26;\\leq \\can a \\can b\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>∥</span><span>a</span><span>b</span><span><span>∥</span><span><span><span><span><span><span></span><span><span>∞</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span>∥</span><span>a</span><span>b</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>≤</span><span></span><span>γ</span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span>∞</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>∥</span><span>b</span><span><span>∥</span><span><span><span><span><span><span></span><span><span>∞</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>≤</span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span>∥</span><span>b</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>where <span><span><span>γ>1\\gamma > 1</span><span aria-hidden=\"true\"><span><span></span><span>γ</span><span></span><span>></span><span></span></span><span><span></span><span>1</span></span></span></span></span> is the so-called <em>expansion factor</em> of the ring <span><span><span>RR</span><span aria-hidden=\"true\"><span><span></span><span>R</span></span></span></span></span>. For more details, see <a href=\"https://escholarship.org/content/qt0141w93p/qt0141w93p.pdf\">this</a>.</p>\n<p><strong>Noise bounds</strong><br>\nSuppose we choose <span><span><span>a∈Ra \\in R</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span> with coefficients sampled independently from one of the distributions (discrete Gaussian, random, ternary). Let <span><span><span>VaV_a</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> be the variance of each coefficient <span><span><span>(a0,...an)(a_0, ... a_n)</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span><span>a</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>.</span><span>.</span><span>.</span><span><span>a</span><span><span><span><span><span><span></span><span><span>n</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span></span></span> in <span><span><span>aa</span><span aria-hidden=\"true\"><span><span></span><span>a</span></span></span></span></span>. In <a href=\"https://www.esat.kuleuven.be/cosic/publications/thesis-316.pdf\">Ilia Iliashenko's thesis</a> and in the <a href=\"https://eprint.iacr.org/2022/706.pdf\">Finding and Evaluating Parameters for BGV</a> paper it's shown that we can choose a number <span><span><span>DD</span><span aria-hidden=\"true\"><span><span></span><span>D</span></span></span></span></span> such that\n<span><span><span>∥a∥can≤DnVa \\can a \\leq D \\sqrt{n V_a}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>a</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span>D</span><span><span><span><span><span><span></span><span><span>n</span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span>\nholds with overwhelming probability. In practice, we set <span><span><span>D=6D = 6</span><span aria-hidden=\"true\"><span><span></span><span>D</span><span></span><span>=</span><span></span></span><span><span></span><span>6</span></span></span></span></span>.</p>\n<p>When analysing the noise growth we'll make use of the following proprieties. For two polynomials <span><span><span>a,b∈Ra, b \\in R</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span>,</span><span></span><span>b</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span> with variances <span><span><span>Va,VbV_a, V_b</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>b</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and some constant <span><span><span>kk</span><span aria-hidden=\"true\"><span><span></span><span>k</span></span></span></span></span> we have:</p>\n<ul>\n<li><span><span><span>Va+b=Va+VbV_{a+b} = V_a + V_b</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>a</span><span>+</span><span>b</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>b</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> ,</li>\n<li><span><span><span>Vka=k2VaV_{ka} = k^2V_a</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>k</span><span>a</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>k</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>,</li>\n<li><span><span><span>Va⋅b=nVaVbV_{a \\cdot b} = nV_aV_b</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>a</span><span>⋅</span><span>b</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>n</span><span><span>V</span><span><span><span><span><span><span></span><span><span>a</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>b</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</li>\n</ul>\n<p>For the distributions that we work with we have the <strong>coefficient</strong> variances:</p>\n<ul>\n<li>Discrete Gaussian distribution with standard deviation <span><span><span>σ: VDG=σ2\\sigma: \\ V_{\\mathcal {DG}} = \\sigma^2</span><span aria-hidden=\"true\"><span><span></span><span>σ</span><span></span><span>:</span><span> </span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>D</span><span>G</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>Ternary distribution: <span><span><span>V3=2/3V_3 = 2/3</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>3</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>2</span><span>/</span><span>3</span></span></span></span></span>.</li>\n<li>Uniform distribution with integer coefficients in <span><span><span>(−q/2,q/2]: Vq≈q2/12(-q/2, q/2]: \\ V_q \\approx q^2 / 12</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>−</span><span>q</span><span>/</span><span>2</span><span>,</span><span></span><span>q</span><span>/</span><span>2</span><span>]</span><span></span><span>:</span><span> </span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≈</span><span></span></span><span><span></span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>/</span><span>1</span><span>2</span></span></span></span></span>.</li>\n</ul>\n<h3>Noise for operations</h3>\n<p>We now have the building blocks (starting values and operations) to analyse the noise for each operation. The goal of analysing the noise buildup is to choose the scheme parameters such that the scheme properties (fhe, decryption) hold and the scheme remains secure. Following the paper <a href=\"https://eprint.iacr.org/2022/706.pdf\">Finding and Evaluating Parameters for BGV</a> we have:</p>\n<p><strong>Fresh ciphertext noise</strong><br>\nIn order to make sure the decryption is correct we must make sure the error</p>\n<div><span><span><span>v=c0+c1⋅s=t(e⋅u+e0+e1⋅s)⏟r+m=r+m mod qv = c_0 + c_1 \\cdot \\textcolor{red}{s} = \\underbrace{t(\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u} + \\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s})}_{r} + m = r + m \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span>v</span><span></span><span>=</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>r</span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span>t</span><span>(</span><span>e</span><span></span><span>⋅</span><span></span><span>u</span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>m</span><span></span><span>=</span><span></span></span><span><span></span><span>r</span><span></span><span>+</span><span></span></span><span><span></span><span>m</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span></div>\n<p>does not wrap around the modulus (i.e <span><span><span>∥v∥∞≤c2n∥v∥can≤q/2\\|v\\|_{\\infty} \\leq c_{2n}\\can v \\leq q/2</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span>∞</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>2</span><span>n</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span>q</span><span>/</span><span>2</span></span></span></span></span> ). The message <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span> is thought to come uniformly from <span><span><span>RtR_t</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Recall that</p>\n<ul>\n<li>The errors <span><span><span>e,e0,e1\\textcolor{darkgreen}{e}, \\textcolor{darkgreen}{e_0}, \\textcolor{darkgreen}{e_1}</span><span aria-hidden=\"true\"><span><span></span><span>e</span><span>,</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> come from a discrete Gaussian => <span><span><span>Ve=Ve0=Ve1=σ2V_{\\textcolor{darkgreen}{e}} = V_{\\textcolor{darkgreen}{e_0}} = V_{\\textcolor{darkgreen}{e_1}} = \\sigma^2</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>e</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>The secret <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> and <span><span><span>u\\red{u}</span><span aria-hidden=\"true\"><span><span></span><span>u</span></span></span></span></span> come from a ternary distribution => <span><span><span>Vs=Vu=2/3V_{\\red{s}} = V_{\\red{u}} = 2/3</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>s</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>u</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>2</span><span>/</span><span>3</span></span></span></span></span>.</li>\n<li>The message <span><span><span>mm</span><span aria-hidden=\"true\"><span><span></span><span>m</span></span></span></span></span> comes from <span><span><span>RtR_t</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> and we assume that the coefficients are uniformly distributed in <span><span><span>Zt\\mathbb Z_t</span><span aria-hidden=\"true\"><span><span></span><span><span>Z</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> => <span><span><span>Vm=t2/12V_m = t^2 / 12</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>m</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>/</span><span>1</span><span>2</span></span></span></span></span>.</li>\n</ul>\n<div><span><span><span>Vv=Vm+t(e⋅u+e0+e1⋅s)=Vm+t2Ve⋅u+e0+e1⋅s=t212+t2(nσ223+σ2+nσ223)=t2(112+σ2(43n+1))\\begin{aligned}\nV_v &#x26;= V_{m + t(\\textcolor{darkgreen}{e}\\cdot \\textcolor{red}{u} + \\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s})} \\\\\n&#x26;= V_m + t^2V_{\\textcolor{darkgreen}{e} \\cdot \\textcolor{red}{u} + \\textcolor{darkgreen}{e_0} + \\textcolor{darkgreen}{e_1} \\cdot \\textcolor{red}{s}}  \\\\\n&#x26;= \\frac{t^2}{12} + t^2 \\left(n\\sigma^2 \\frac{2}{3} + \\sigma^2 + n\\sigma^2 \\frac{2}{3}\\right)  \\\\\n&#x26;= t^2 \\left(\\frac{1}{12} + \\sigma^2 \\left(\\frac{4}{3}n + 1\\right)\\right)\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>V</span><span><span><span><span><span><span></span><span><span>v</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>m</span><span>+</span><span>t</span><span>(</span><span>e</span><span>⋅</span><span>u</span><span>+</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>+</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span>s</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span>m</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>e</span><span>⋅</span><span>u</span><span>+</span><span><span>e</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>+</span><span><span>e</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span>s</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>+</span><span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span>n</span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span>3</span></span></span><span><span></span><span></span></span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>+</span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>n</span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span>3</span></span></span><span><span></span><span></span></span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>+</span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span><span>3</span></span></span><span><span></span><span></span></span><span><span></span><span><span>4</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>n</span><span></span><span>+</span><span></span><span>1</span><span><span>)</span></span></span><span><span>)</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Hence:\n<span><span><span>∥v∥can≤DnVv\\can v \\leq D\\sqrt {nV_v}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span>D</span><span><span><span><span><span><span></span><span><span>n</span><span><span>V</span><span><span><span><span><span><span></span><span><span>v</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></p>\n<p>The parameters for the scheme and distributions, <span><span><span>q,t,σ,nq, t, \\sigma, n</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>,</span><span></span><span>t</span><span>,</span><span></span><span>σ</span><span>,</span><span></span><span>n</span></span></span></span></span>,  are chosen such that the decryption is correct.</p>\n<p><strong>Addition</strong><br>\nFor two ciphertexts <span><span><span>(c,c′)(c, c')</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>c</span><span>,</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> encrypting <span><span><span>(m,m′)(m, m')</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>m</span><span>,</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span> we have the corresponding errors <span><span><span>(v,v′)(v, v')</span><span aria-hidden=\"true\"><span><span></span><span>(</span><span>v</span><span>,</span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span></span></span></span></span>. The error after ciphertext addition is <span><span><span>vaddv_{\\text{add}}</span><span aria-hidden=\"true\"><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>add</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>If we use the decryption equation we have</p>\n<div><span><span><span>vadd=v+v′=(c0+c1⋅s)+(c0′+c1′⋅s)=r+m+r′+m′ mod qv_{\\text{add}} = v + v' = (c_0 + c_1 \\cdot \\red{s}) + (c_0' + c_1' \\cdot \\red{s}) = r + m + r' + m' \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>add</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>v</span><span></span><span>+</span><span></span></span><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span><span></span><span>+</span><span></span></span><span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span>r</span><span></span><span>+</span><span></span></span><span><span></span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span></div>\n<p>We have <span><span><span>m+m′=[m+m′]t+gtm + m' = [m + m']_t + gt</span><span aria-hidden=\"true\"><span><span></span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>[</span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>g</span><span>t</span></span></span></span></span> with <span><span><span>g∈Rg \\in R</span><span aria-hidden=\"true\"><span><span></span><span>g</span><span></span><span>∈</span><span></span></span><span><span></span><span>R</span></span></span></span></span> and <span><span><span>∥g∥∞=1\\|g\\|_{\\infty} = 1</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>g</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span>∞</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>1</span></span></span></span></span> (because both <span><span><span>∥m∥∞,∥m′∥∞&#x3C;t/2\\|m\\|_{\\infty}, \\|m'\\|_{\\infty} &#x3C; t / 2</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span>m</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span>∞</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span>∥</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span>∞</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>&#x3C;</span><span></span></span><span><span></span><span>t</span><span>/</span><span>2</span></span></span></span></span>). By replacing in the equation above we obtain:\n<span><span><span>v+v′=[m+m′]t+r+r′+gt mod qv + v' = [m + m']_t + r + r' + gt \\bmod q</span><span aria-hidden=\"true\"><span><span></span><span>v</span><span></span><span>+</span><span></span></span><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>[</span><span>m</span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span>t</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>r</span><span></span><span>+</span><span></span></span><span><span></span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>g</span><span>t</span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span></span><span><span></span><span>q</span></span></span></span></span></p>\n<p>We see that the noise <span><span><span>r+r′+gtr + r' + gt</span><span aria-hidden=\"true\"><span><span></span><span>r</span><span></span><span>+</span><span></span></span><span><span></span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>g</span><span>t</span></span></span></span></span> grows linearly.</p>\n<p>Finally, using the canonical norm we have the following:</p>\n<div><span><span><span>∥vadd∥can≤∥v∥can+∥v′∥can\\can {v_{\\text{add}}} \\leq \\can v + \\can {v'}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>add</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p><strong>Multiplication</strong><br>\nSimilarly for multiplication, if we use the decryption equation we have:</p>\n<div><span><span><span>vmul=v⋅v′=(c0+c1⋅s)⋅(c0′+c1′⋅s)=(r+m)+(r′+m′)=mm′+mr′+m′r+rr′ mod q\\begin{aligned}\nv_{\\text{mul}} \n&#x26;= v \\cdot v' = (c_0 + c_1 \\cdot \\red{s}) \\cdot (c_0' + c_1' \\cdot \\red{s}) \\\\\n&#x26;= (r + m) + (r' + m') = mm' + mr' + m'r + rr' \\bmod q\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>v</span><span></span><span>⋅</span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>=</span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span><span></span><span>⋅</span><span></span><span>(</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span><span>′</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span>)</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>(</span><span>r</span><span></span><span>+</span><span></span><span>m</span><span>)</span><span></span><span>+</span><span></span><span>(</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>)</span><span></span><span>=</span><span></span><span>m</span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>m</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>r</span><span></span><span>+</span><span></span><span>r</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span></span><span><span><span>m</span><span>o</span><span>d</span></span></span><span></span><span></span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>If we look at the error term <span><span><span>mr′+m′r+rr′mr' + m'r + rr'</span><span aria-hidden=\"true\"><span><span></span><span>m</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>m</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span>r</span><span></span><span>+</span><span></span></span><span><span></span><span>r</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> we see that in the leading term <span><span><span>rr′rr'</span><span aria-hidden=\"true\"><span><span></span><span>r</span><span><span>r</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span></span></span></span></span> we multiply the noises, therefore the noise grows quadratically.</p>\n<p>Using the canonical norm, we have:</p>\n<div><span><span><span>∥vmul∥can≤∥v∥can∥v′∥can\\can {v_{\\text{mul}}} \\leq \\can v\\can {v'}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span>′</span></span></span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p><strong>Modulus switching</strong><br>\nFor modulus switch we scale the noise down and then we add the small error that comes with the correction terms <span><span><span>δ0,δ1\\delta_0, \\delta_1</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>,</span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.\nRecall that</p>\n<ul>\n<li>We set <span><span><span>δi=t[−cit−1]Q/q\\delta_i = t[-c_it^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>t</span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>. We assume the terms <span><span><span>[−cit−1]Q/q[-c_it^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> are uniformly distributed mod <span><span><span>Q/qQ / q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span>, then multiplied by <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> => <span><span><span>Vδ0=Vδ1=t2Q212q2V_{\\delta_0} = V_{\\delta_1} = \\dfrac {t^2Q^2} {12q^2}</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>Q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span></span></span></span></span>.</li>\n</ul>\n<div><span><span><span>vswitch=[c~0+c~1⋅s]q=qQ[c0+c1⋅s]Q+qQ(δ0+δ1⋅s)=qQv+qQ(δ0+δ1⋅s)v_{\\text{switch}} = [\\tilde c_0 + \\tilde c_1 \\cdot \\red{s}]_q = \\dfrac q Q [c_0 + c_1 \\cdot \\red{s}]_Q  + \\dfrac q Q (\\delta_0 + \\delta_1 \\cdot \\red{s}) = \\dfrac q Q v  + \\dfrac q Q (\\delta_0 + \\delta_1 \\cdot \\red{s})</span><span aria-hidden=\"true\"><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>switch</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>[</span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span><span></span><span>c</span></span><span><span></span><span><span>~</span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>[</span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>]</span><span><span><span><span><span><span></span><span><span>Q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>v</span><span></span><span>+</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span></span></span></span></span></div>\n<p>Using the canonical norm we get:</p>\n<div><span><span><span>∥vswitch∥can≤qQ∥v∥can+qQ∥δ0+δ1⋅s∥can≤qQ∥v∥can+Dtn12(1+23n)\\can {v_{\\text{switch}}} \\leq \\dfrac q Q \\can v + \\dfrac q Q \\can {\\delta_0 + \\delta_1 \\cdot \\red{s}} \\leq \\dfrac q Q \\can v + Dt\\sqrt{\\dfrac n {12} \\left (1 + \\dfrac 2 3 n \\right)}</span><span aria-hidden=\"true\"><span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>switch</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>∥</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>≤</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>∥</span><span>v</span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span>D</span><span>t</span><span><span><span><span><span><span></span><span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span>n</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span>1</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>n</span><span><span>)</span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></div>\n<p>We can see that the noise is scaled down by almost <span><span><span>q/Qq / Q</span><span aria-hidden=\"true\"><span><span></span><span>q</span><span>/</span><span>Q</span></span></span></span></span>.</p>\n<p><strong>Key switching - Base decomposition</strong><br>\nIn relinearization we deal with <span><span><span>c0+c1⋅s+c2⋅s2c_0 + c_1 \\cdot \\red{s} + c_2 \\cdot \\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>. Here we decompose <span><span><span>c2⋅s2c_2 \\cdot \\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span> in base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> and hide the <em>hints</em> about <span><span><span>s2\\red{s}^2</span><span aria-hidden=\"true\"><span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span> using  RingLWE-like samples involving errors  <span><span><span>ei\\textcolor{darkgreen}{e_i}</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>. Remember from  key switching technique using base decomposition that we have a relinearization error: <span><span><span>∑i=0⌊log⁡Tq⌋tei⋅c2∗(i)\\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} t\\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span><span>∑</span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span>. The variance of any term <span><span><span>tei⋅c2∗(i)t\\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span> from the sum is <span><span><span>Vtei⋅c2∗(i)V_{t \\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}}</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Recall that</p>\n<ul>\n<li>The errors <span><span><span>ei\\textcolor{darkgreen}{e_i}</span><span aria-hidden=\"true\"><span><span></span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> come from a discrete Gaussian distribution => <span><span><span>Vei=σ2V_{\\textcolor{darkgreen}{e_i}}= \\sigma^2</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>We can assume that the polynomials in base <span><span><span>TT</span><span aria-hidden=\"true\"><span><span></span><span>T</span></span></span></span></span> behave like random polynomials extracted from <span><span><span>RTR_T</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> => <span><span><span>Vc2∗=T2/12V_{{c^*_2}} = T^2 / 12</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>T</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>/</span><span>1</span><span>2</span></span></span></span></span>.</li>\n</ul>\n<div><span><span><span>vks=c0∗+c1∗⋅s+c2∗⋅s2⏟vmul+∑i=0⌊log⁡Tq⌋tei⋅c2∗(i)v_{\\text{ks}} = \\underbrace{c^*_0 + c^*_1 \\cdot \\red{s} + c^*_2 \\cdot \\red{s}^2}_{v_{\\text{mul}}} +  \\sum_{i=0}^{\\lfloor \\log_T q \\rfloor} t\\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}</span><span aria-hidden=\"true\"><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>ks</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span>i</span><span>=</span><span>0</span></span></span></span><span><span></span><span><span>∑</span></span></span><span><span></span><span><span><span>⌊</span><span><span><span>l</span><span>o</span><span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>q</span><span>⌋</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>t</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>If we use the canonical norm:</p>\n<div><span><span><span>∥vks∥can≤∥vmul∥can+Dnlog⁡T(q)Vt⋅ei⋅c2∗(i)=∥vmul∥can+Dtn2log⁡T(q)VeiVc2∗(i)=∥vmul∥can+DtnTlog⁡T(q)σ212\\begin{aligned}\n\\can {v_{\\text{ks}}} &#x26; \\leq \\can {v_{\\text{mul}}} + D\\sqrt{n \\log_T (q)V_{t \\cdot \\textcolor{darkgreen}{e_i} \\cdot {c^*_2}^{(i)}}} \\\\\n&#x26;= \\can {v_{\\text{mul}}} + Dt\\sqrt{n^2 \\log_T (q)V_{\\textcolor{darkgreen}{e_i}} V_{{c^*_2}^{(i)}}}  \\\\ \n&#x26;= \\can {v_{\\text{mul}}} + DtnT\\sqrt{ \\log_T (q)\\dfrac {\\sigma^2} {12}}\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>ks</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>≤</span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>D</span><span><span><span><span><span><span></span><span><span>n</span><span></span><span><span>lo<span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>(</span><span>q</span><span>)</span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>t</span><span>⋅</span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>D</span><span>t</span><span><span><span><span><span><span></span><span><span><span>n</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span>lo<span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>(</span><span>q</span><span>)</span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>e</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span><span>(</span><span>i</span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>D</span><span>t</span><span>n</span><span>T</span><span><span><span><span><span><span></span><span><span><span>lo<span>g</span></span><span><span><span><span><span><span></span><span><span>T</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>(</span><span>q</span><span>)</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p><strong>Key switching - Modulus switch</strong><br>\nIn the relinearisation version that employs modulus switching, we have the following error term: <span><span><span>qQ(tc2∗⋅e+δ0+δ1⋅s)\\dfrac q Q (tc_2^* \\cdot \\textcolor{darkgreen}{e} + \\delta_0 + \\delta_1 \\cdot \\red{s})</span><span aria-hidden=\"true\"><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>t</span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>e</span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span></span></span></span></span>.\nRecall that:</p>\n<ul>\n<li>The ciphertext component <span><span><span>c2∗c_2^*</span><span aria-hidden=\"true\"><span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> comes from <span><span><span>RqR_q</span><span aria-hidden=\"true\"><span><span></span><span><span>R</span><span><span><span><span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> => <span><span><span>Vc2∗=q2/12V_{c_2^*} = q^2 / 12</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>/</span><span>1</span><span>2</span></span></span></span></span>.</li>\n<li>The errors <span><span><span>e\\textcolor{darkgreen}{e}</span><span aria-hidden=\"true\"><span><span></span><span>e</span></span></span></span></span> comes from a discrete Gaussian => <span><span><span>Ve=σ2V_{\\textcolor{darkgreen}{e}}= \\sigma^2</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>e</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>The secret <span><span><span>s\\red{s}</span><span aria-hidden=\"true\"><span><span></span><span>s</span></span></span></span></span> comes from a ternary distribution => <span><span><span>Vs=2/3V_{\\red{s}}= 2/3</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>s</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>2</span><span>/</span><span>3</span></span></span></span></span>.</li>\n<li>We set <span><span><span>δi=t[−cit−1]Q/q\\delta_i = t[-c_it^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span>t</span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span>. We assume the terms <span><span><span>[−cit−1]Q/q[-c_it^{-1}]_{Q/q}</span><span aria-hidden=\"true\"><span><span></span><span>[</span><span>−</span><span><span>c</span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>t</span><span><span><span><span><span><span></span><span><span><span>−</span><span>1</span></span></span></span></span></span></span></span></span><span><span>]</span><span><span><span><span><span><span></span><span><span><span>Q</span><span>/</span><span>q</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span> are uniformly distributed mod <span><span><span>Q/qQ / q</span><span aria-hidden=\"true\"><span><span></span><span>Q</span><span>/</span><span>q</span></span></span></span></span>, then multiplied by <span><span><span>tt</span><span aria-hidden=\"true\"><span><span></span><span>t</span></span></span></span></span> => <span><span><span>Vδ0=Vδ1=t2Q212q2V_{\\delta_0} = V_{\\delta_1} = \\dfrac {t^2Q^2} {12q^2}</span><span aria-hidden=\"true\"><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>Q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span></span></span></span></span>.</li>\n</ul>\n<div><span><span><span>vks=c0∗+c1∗⋅s+c2∗⋅s2⏟vmul+qQ(tc2∗⋅e+δ0+δ1⋅s)v_{\\text{ks}} = \\underbrace{c_0^* + c_1^* \\cdot \\red{s} + c_2^* \\cdot \\red{s}^2}_{v_{\\text{mul}}} + \\dfrac q Q (tc_2^* \\cdot \\textcolor{darkgreen}{e} + \\delta_0 + \\delta_1 \\cdot \\red{s})</span><span aria-hidden=\"true\"><span><span></span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>ks</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>=</span><span></span></span><span><span></span><span><span><span><span><span><span></span><span><span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span><span><span></span><span><span><span><span><span><span></span><span><span></span><span></span><span></span></span></span><span><span></span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>0</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>1</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span>s</span><span></span><span>+</span><span></span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span><span><span>s</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>t</span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>e</span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span></span><span><span></span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span>)</span></span></span></span></span></div>\n<p>The variance of this error term is:</p>\n<div><span><span><span>VqQ(tc2∗i⋅e+δ0+δ1⋅s)=(qQ)2(t2nVc2∗Ve+Vδ0+nVδ1Vs)=(qQ)2(t2nq212σ2+t2Q212q2+nt2Q212q223)=(qQ)2(t2nq212σ2)+t212+nt21223=(qQ)2(t2nq212σ2)+t212(1+23n)\\begin{aligned}\nV_{\\frac q Q (t{c_2^*}_i \\cdot \\textcolor{darkgreen}{e} + \\delta_0 + \\delta_1 \\cdot \\textcolor{red}{s})} \n&#x26;= \\left(\\frac q Q \\right)^2 (t^2 nV_{c_2^*}V_{\\textcolor{darkgreen}{e}} + V_{\\delta_0} + nV_{\\delta_1}V_{\\textcolor{red}{s}}) \\\\\n&#x26;= \\left(\\frac q Q \\right)^2 \\left(t^2  n \\frac {q^2} {12} \\sigma^2 +  \\dfrac {t^2Q^2} {12q^2} + n  \\dfrac {t^2Q^2} {12q^2} \\dfrac 2 3\\right) \\\\\n&#x26;= \\left(\\frac q Q \\right)^2 \\left(t^2  n \\frac {q^2} {12} \\sigma^2 \\right)  +\\dfrac {t^2} {12} + n  \\dfrac {t^2} {12} \\dfrac 2 3 \\\\\n&#x26;= \\left(\\frac q Q \\right)^2 \\left(t^2  n \\frac {q^2} {12} \\sigma^2 \\right)  +\\dfrac {t^2} {12} \\left(1+ \\dfrac 2 3 n \\right)\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span></span><span><span><span><span><span><span></span><span><span>Q</span></span></span><span><span></span><span></span></span><span><span></span><span><span>q</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>(</span><span>t</span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span><span><span><span><span></span><span><span>i</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span>e</span><span>+</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>+</span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>⋅</span><span>s</span><span>)</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>(</span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>n</span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>c</span><span><span><span><span><span><span></span><span><span>2</span></span></span><span><span></span><span><span>∗</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>e</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>0</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>n</span><span><span>V</span><span><span><span><span><span><span></span><span><span><span><span>δ</span><span><span><span><span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>V</span><span><span><span><span><span><span></span><span><span><span>s</span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span>)</span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>Q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>+</span><span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>Q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span>+</span><span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span></span></span><span><span></span><span><span></span><span></span><span>=</span><span></span><span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span><span>)</span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span>1</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>n</span><span><span>)</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<p>Now we can bound:</p>\n<div><span><span><span>∥vks∥can≤∥vmul∥can+Dn(qQ)2(t2nq212σ2+t212(1+23n))≤∥vmul∥can+DqQtn(nq212σ2+112(1+23n))\\begin{aligned}\n\\can {v_{\\text{ks}}} \n&#x26; \\leq \\can {v_{\\text{mul}}} + D\\sqrt{n \\left(\\frac q Q \\right)^2 \\left(t^2  n \\frac {q^2} {12} \\sigma^2 + \\frac {t^2} {12} \\left(1+ \\dfrac 2 3 n\\right) \\right)} \\\\\n&#x26; \\leq \\can {v_{\\text{mul}}} + D \\frac q Q t\\sqrt{n \\left(n \\frac{q^2} {12} \\sigma^2 + \\frac {1} {12} \\left(1+ \\dfrac 2 3 n\\right) \\right)}\n\\end{aligned}</span><span aria-hidden=\"true\"><span><span></span><span><span><span><span><span><span><span><span></span><span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>ks</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span><span><span><span><span><span></span><span><span></span><span></span><span>≤</span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>D</span><span><span><span><span><span><span></span><span><span>n</span><span></span><span><span><span><span>(</span></span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>)</span></span></span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span><span><span>(</span></span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>t</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span>1</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>n</span><span><span>)</span></span></span><span><span>)</span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span><span><span></span><span><span></span><span></span><span>≤</span><span></span><span>∥</span><span><span>v</span><span><span><span><span><span><span></span><span><span><span><span>mul</span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span><span><span>∥</span><span><span><span><span><span><span></span><span><span><span><span>can</span></span></span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span>D</span><span><span></span><span><span><span><span><span><span></span><span>Q</span></span><span><span></span><span></span></span><span><span></span><span>q</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>t</span><span><span><span><span><span><span></span><span><span>n</span><span></span><span><span><span>(</span></span><span>n</span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span><span>q</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span><span>σ</span><span><span><span><span><span><span></span><span><span>2</span></span></span></span></span></span></span></span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span><span>1</span><span>2</span></span></span><span><span></span><span></span></span><span><span></span><span><span>1</span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span></span><span><span><span>(</span></span><span>1</span><span></span><span>+</span><span></span><span><span></span><span><span><span><span><span><span></span><span>3</span></span><span><span></span><span></span></span><span><span></span><span>2</span></span></span><span>​</span></span><span><span><span></span></span></span></span></span><span></span></span><span>n</span><span><span>)</span></span></span><span><span>)</span></span></span></span></span><span><span></span><span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span><span>​</span></span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<h1>Code</h1>\n<p>And now that we have discussed all the ingredients and spices of the BGV encryption scheme, it's time to bake it, sorry, implement it.</p>\n<p>We provide a <a href=\"https://github.com/zademn/EverythingCrypto/blob/master/E3-Homomorphic-Encryption/BGV.ipynb\">proof of concept implementation</a>, in Python. The aim of the code is to mirror the equations easily. This means that if we see <span><span><span>a⋅s+ea \\cdot s + e</span><span aria-hidden=\"true\"><span><span></span><span>a</span><span></span><span>⋅</span><span></span></span><span><span></span><span>s</span><span></span><span>+</span><span></span></span><span><span></span><span>e</span></span></span></span></span> in the theory part we prefer to see <code>a * s + e</code> in code instead of <code>polyadd(polymul(a, s), e)</code>.</p>\n<p>DISCLAIMER: The code should be used for educational purposes only, and never in production.</p>\n<p>We represent polynomials using a class: <code>QuotientRingPoly</code>. Every polynomial is defined by three attributes:</p>\n<ul>\n<li><code>coef: np.ndarray</code> - Vector of the polynomial's coefficients. <code>coef[-1]</code> is the free coefficient, <code>coef[0]</code> is the leading coefficient. It's always padded to have <code>n</code> elements.</li>\n<li><code>coef_modulus: int</code> - Modulus of the ring where its coefficients live in.</li>\n<li><code>poly_modulus: int | np.ndarray</code> - Modulus of the polynomial ring where it belongs: <code>X^n + 1</code></li>\n</ul>\n<p><code>QuotientRingPoly</code> has the <code>._reduce(self)</code> method which reduces any polynomial to an element in the ring.</p>\n<p>We overloaded the operators <code>+, -, *, //, %</code>:</p>\n<ul>\n<li>Operators work between two <code>QuotientRingPoly</code> using the default polynomial operation rules.</li>\n<li>Operators work between a <code>QuotientRingPoly</code> and an <code>int | float</code> coefficient-wise.</li>\n</ul>\n<p>The attributes <code>coef</code> and <code>coef_modulus</code> can be assigned too. After assigning, the <code>_reduce()</code> method will be called. This is helpful to easily change the ring of the polynomial.</p>\n<p><strong>Remarks</strong></p>\n<ul>\n<li>To work with big integers, we use the python built in <code>int</code> class. To use this with numpy we set <code>dtype = object</code> for every array creation.</li>\n<li>We have helper functions <code>roundv</code> and <code>intv</code> (round vector, int vector) that vectorize the <code>round</code> and <code>int</code> operations, allowing us to help with rounding and converting vector elements to python's builtin <code>int</code> class.</li>\n</ul>\n<h1>Resources</h1>\n<ul>\n<li><a href=\"https://eprint.iacr.org/2011/277.pdf\">BGV paper</a> - Original paper</li>\n<li><a href=\"https://eprint.iacr.org/2011/344.pdf\">BV paper</a></li>\n<li><a href=\"https://homomorphicencryption.org/standard/\">FHE standard</a></li>\n<li><a href=\"https://eprint.iacr.org/2015/889.pdf\">CS15</a> - for comparisons between FHE schemes</li>\n<li><a href=\"https://www.esat.kuleuven.be/cosic/publications/thesis-316.pdf\">Ilia Iliashenko thesis</a> - for noise analysis</li>\n<li><a href=\"https://eprint.iacr.org/2019/493.pdf\">Evaluating the effectiveness of heuristic worst-case noise analysis in FHE</a></li>\n<li><a href=\"https://eprint.iacr.org/2012/099.pdf\">GHS</a></li>\n<li><a href=\"https://eprint.iacr.org/2022/706.pdf\">Finding and Evaluating Parameters for BGV</a></li>\n<li><a href=\"https://bit-ml.github.io/blog/post/homomorphic-encryption-toy-implementation-in-python/\">Bitdefender BFV blogpost</a></li>\n<li><a href=\"https://www.inferati.com/blog/fhe-schemes-bgv\">Inferati blogpost</a></li>\n</ul>\n"}}}
